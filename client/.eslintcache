[{"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js":"1","/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js":"2","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js":"3","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js":"4","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js":"5","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js":"6","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js":"7","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js":"8","/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js":"9","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js":"10","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js":"11","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js":"12","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js":"13","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js":"14","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js":"15","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js":"16","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js":"17","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js":"18","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js":"19","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js":"20","/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js":"21","/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js":"22","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js":"23","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js":"24","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js":"25","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js":"26","/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js":"27","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js":"28","/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js":"29","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js":"30","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js":"31","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js":"32","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js":"33","/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js":"34","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js":"35","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js":"36","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js":"37","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js":"38","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js":"39","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js":"40","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Slider.js":"41","/Users/SaraMartz/Desktop/final-project-app/client/src/Scroll.js":"42"},{"size":524,"mtime":1608569584000,"results":"43","hashOfConfig":"44"},{"size":598,"mtime":1608204334000,"results":"45","hashOfConfig":"44"},{"size":2401,"mtime":1608574900000,"results":"46","hashOfConfig":"44"},{"size":4075,"mtime":1608574942000,"results":"47","hashOfConfig":"44"},{"size":3785,"mtime":1608574077000,"results":"48","hashOfConfig":"44"},{"size":10812,"mtime":1608575204000,"results":"49","hashOfConfig":"44"},{"size":4074,"mtime":1608574328000,"results":"50","hashOfConfig":"44"},{"size":4698,"mtime":1608574613000,"results":"51","hashOfConfig":"44"},{"size":6028,"mtime":1608570735000,"results":"52","hashOfConfig":"44"},{"size":2420,"mtime":1608574060000,"results":"53","hashOfConfig":"44"},{"size":2794,"mtime":1608574731000,"results":"54","hashOfConfig":"44"},{"size":6198,"mtime":1608574825000,"results":"55","hashOfConfig":"44"},{"size":1524,"mtime":1608574245000,"results":"56","hashOfConfig":"44"},{"size":6513,"mtime":1608574531000,"results":"57","hashOfConfig":"44"},{"size":1297,"mtime":1608274265000,"results":"58","hashOfConfig":"44"},{"size":1293,"mtime":1608274271000,"results":"59","hashOfConfig":"44"},{"size":1306,"mtime":1608274277000,"results":"60","hashOfConfig":"44"},{"size":1302,"mtime":1608274253000,"results":"61","hashOfConfig":"44"},{"size":1293,"mtime":1608274284000,"results":"62","hashOfConfig":"44"},{"size":4836,"mtime":1608574663000,"results":"63","hashOfConfig":"44"},{"size":485,"mtime":1608204327000,"results":"64","hashOfConfig":"44"},{"size":664,"mtime":1607889313000,"results":"65","hashOfConfig":"44"},{"size":1527,"mtime":1607899915000,"results":"66","hashOfConfig":"44"},{"size":741,"mtime":1608153788000,"results":"67","hashOfConfig":"44"},{"size":2850,"mtime":1608237684000,"results":"68","hashOfConfig":"44"},{"size":1223,"mtime":1608560815000,"results":"69","hashOfConfig":"44"},{"size":479,"mtime":1608557489000,"results":"70","hashOfConfig":"44"},{"size":585,"mtime":1608274137000,"results":"71","hashOfConfig":"44"},{"size":640,"mtime":1607699220000,"results":"72","hashOfConfig":"44"},{"size":7067,"mtime":1608563497000,"results":"73","hashOfConfig":"44"},{"size":7791,"mtime":1608552561000,"results":"74","hashOfConfig":"44"},{"size":9385,"mtime":1608554822000,"results":"75","hashOfConfig":"44"},{"size":537,"mtime":1608233857000,"results":"76","hashOfConfig":"44"},{"size":310,"mtime":1607699213000,"results":"77","hashOfConfig":"44"},{"size":73,"mtime":1607256110000,"results":"78","hashOfConfig":"44"},{"size":5119,"mtime":1608213031000,"results":"79","hashOfConfig":"44"},{"size":2417,"mtime":1608571286000,"results":"80","hashOfConfig":"44"},{"size":2891,"mtime":1608574424000,"results":"81","hashOfConfig":"44"},{"size":692,"mtime":1608237539000,"results":"82","hashOfConfig":"44"},{"size":517,"mtime":1608274168000,"results":"83","hashOfConfig":"44"},{"size":2329,"mtime":1608573579000,"results":"84","hashOfConfig":"44"},{"size":245,"mtime":1608568368000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"kxha0u",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js",[],["180","181"],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js",["182","183"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js",["184"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js",["185"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js",["186"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js",["187"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport UserService from '../../../../service/account.service'\nimport WorkCard from \"./Work-card\"\nimport Fade from 'react-reveal/Fade'\nimport { Container, Row, Button, Col } from 'react-bootstrap'\nimport WorkForm from '../Work-form/Work-form'\nimport Popup from \"../../../shared/Popup/Popup\"\n// import Loader from '../shared/Spinner/Loader'\n\nclass WorksList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            works: [],            \n            showModal: false\n        }\n        this.worksService = new WorkService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n        this.displayWorks()\n    }\n\n    getUser = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    displayWorks = () => {\n        this.worksService\n            .getWorks()\n            .then(res => this.setState({works: res.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n   \n    render() {\n        return (\n            \n            <>\n                <Fade>\n                <Container className=\"portfolio-container mb-5 mt-5\">\n                    <Row>\n                        <Col className=\"mt-5 text-center\">\n                            <h2>Portfolio</h2>\n                        </Col>                        \n                    </Row> \n                    <Row className=\" mb-5 d-flex flex-row justify-content-center\">                                      \n            \n                        {\n                           this.state.works.filter(elm => elm.author == this.state.user._id || elm.coworkers.includes(this.state.user._id)).map(elm => <WorkCard key={elm._id} {...elm} />) \n                        }                   \n                                                \n                    </Row>\n\n                    <Row >\n                        <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn btn-obscure mb-5\">Create New Work</Button>\n                    </Row>\n\n                </Container>            \n\n                </Fade>\n\n                 <Popup show={this.state.showModal} handleModal={this.handleModal} title=\" \">\n                    <WorkForm closeModal={() => this.handleModal(false)} updateList={this.displayWorks} loggedUser={this.props.loggedUser} />\n                </Popup>             \n            </> \n        )\n    }\n} \n\nexport default WorksList\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js",["188","189","190"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport BoardService from '../../../../service/boards.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport WorkEdit from \"../Work-edit/Work-edit\"\nimport Popup from \"../../../shared/Popup/Popup\"\nimport Fade from 'react-reveal/Fade'\n\nimport { Link } from 'react-router-dom'\n\nclass WorkDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            theBoard: {},\n            coworkers: [],\n            user: this.props.loggedUser,\n            showModal: false\n        }\n        this.worksService = new WorkService()\n        this.boardsService = new BoardService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.displayWork() \n        this.displayCoworkers()\n    }\n\n    displayWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .then(() => this.displayBoard())\n            .then(() => this.displayCoworkers())\n            .catch(err => console.log(err))   \n    }\n\n    displayBoard = () => {        \n        const board_id = this.state.work.board\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({theBoard: res.data}))\n            .catch(err => console.log(err)) \n    }\n\n    deleteWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .deleteWork(work_id)\n            .then(res => {\n                this.setState({ work: res.data })\n                this.props.history.push(`/works/${this.state.user._id}`)  \n            })\n            .catch(err => console.log(err))   \n    }\n\n\n    displayCoworkers = () => {\n        this.userService\n            .getUsers()\n            .then(res => {                 \n                let filteredUsers = res.data.filter(elm => this.state.work.coworkers.includes(elm._id))\n                this.setState({ coworkers: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n\n        return (\n        \n        <>\n\n        <Fade>\n        <Container className = \"portfolio-container \">\n    \n       { this.state.theBoard.images && this.state.coworkers ?\n            <Row>\n                <Col md={5} className=\"account-section1 portfolio-details text-center mt-4\">\n                    <h3 className=\"\">{this.state.work.title}</h3>\n                    <div className=\"user-img mt-5\">\n                        <Card.Img className=\"mb-4\" src={this.state.work.image} alt={this.state.user.title} />\n                            </div>\n                    <h6 className=\"mb-5\">Date: {this.state.work.date}</h6>       \n                    <h5 className=\"mt-5\">Status</h5>   \n                    <hr/>        \n                    <p> {this.state.work.status}</p>\n                                                                                                       \n                    <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Edit</Button>\n                    <Button onClick={this.deleteWork} variant=\"none\" size=\"sm\" className=\"create-btn mt-5 btn-delete\">Delete</Button>\n                </Col>\n                            \n                <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">\n                                \n                    <div className=\"description\">\n                        <h3 >Description</h3>\n                        <hr />\n                        <p className=\"mb-5\">{this.state.work.description}</p>\n                        <h5>Coworkers</h5>\n                        <hr />\n                        <div className=\"\">\n                            <div className=\"coworker coworkers-container mt-4 d-flex flex-wrap justify-content-between\">\n                                        {this.state.coworkers.map(elm => {\n                                         return (   <div className=\"coworkerimg-container text-center mr-5\">\n                                                        <img key={elm} src={elm.image} />\n                                                        <h6 className=\"mt-3\">{elm.name}</h6>\n                                                    </div>)\n                                        })}                                  \n                            </div>             \n                        </div>\n                        <h5>Board</h5>\n                        <hr/>\n                    <div className=\"d-flex flex-row justify-content-around flex-wrap userimg-container mb-4 ml-4\">\n                           \n                                    {this.state.theBoard.images.map(elm => {\n                                        return (<Col>\n                                            \n                                                    <img key={elm} src={elm} />\n                                                    \n                                                </Col>)\n                                    })}\n                         </div>\n                    </div>\n                                \n                    <div></div>\n                </Col>\n            </Row>\n            : null  }\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} >\n                    <WorkEdit closeModal={() => this.handleModal(false)} updateWork={this.displayWork} loggedUser={this.props.loggedUser} {...this.props}/>\n                </Popup>\n        \n        </Container> \n                \n        </Fade>  \n            \n           </> \n        )    \n    }\n}\n\nexport default WorkDetails\n\n\n\n// {this.state.coworkers.map(elm => <img key={elm} src={elm.image} style={{marginBottom: \"30px\"}}/>)}\n\n// {this.state.board.images.map(elm => <img key={elm} src={elm} style={{ marginBottom: \"30px\" }} />)}","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js",["191"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js",["192"],"import React, { Component } from 'react'\nimport UserService from \"../../../service/account.service\"\nimport BoardService from '../../../service/boards.service'\n\nimport { Form, Button } from 'react-bootstrap'\n\nclass ImageForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            board: {               \n                _id: \"\",\n                image: \"\"\n            },\n            user: this.props.loggedUser,\n            boards: [],    \n        }\n        this.boardsService = new BoardService()    \n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => { \n        this.displayBoards()\n        // this.displayBoard() >>>>>>>>> Conseguir id cuando se muestra formulario\n    }\n    \n    handleInputChange = e => this.setState({ board: { ...this.state.board, [e.target.name]: e.target.value, image: this.props.favImages } }) \n      \n    handleSubmit = e => {  \n        e.preventDefault()\n        this.editBoard()\n    } \n\n    editBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .editBoard(board_id, this.state.board)\n            .then(() => {              \n               this.props.closeModal()              \n                console.log(\"yay!!!\")\n            })\n            .catch(err => console.log(err))\n    }\n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                this.setState({ boards: boards })\n            })\n            .catch(err => console.log(err))\n    }    \n    \n    displayBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({ board: res.data }))\n            .catch(err => console.log(err))   \n    } \n \n    render() {\n\n        return (\n            <>       \n                <Form onSubmit={this.handleSubmit} className=\"account-edit\">                  \n                    <Form.Group controlId=\"images\">                                          \n                        <Form.Control as=\"select\" name=\"_id\" type=\"select\" value={this.state._id} onChange={this.handleInputChange} >\n                            <option value=\"Choose\" disabled>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button type=\"submit\" size=\"md\" variant=\"none\" className=\"btn-transparent  mt-4\">Save to board</Button>\n                    </div>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default ImageForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js",["193"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport Loader from \"../../../shared/Spinner/Loader\"\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkEdit extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            user: this.props.loggedUser,\n            collaborators: [],\n            boards: []\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService()\n    }\n\n    componentDidMount = () => {\n        this.workInfo()\n        this.displayFriends()\n        this.displayBoards()\n    }\n\n    workInfo = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    handleInputChange = e => { this.setState({ work: { ...this.state.work, [e.target.name]: e.target.value } }) }\n    \n    handleInputMultiple = e => {\n        const selected = []\n        e.target.childNodes.forEach(e => e.selected === true ? selected.push(e.value) : null)\n        this.setState({ work: { ...this.state.work, [e.target.name]: selected } } )\n    }\n\n    handleSubmit = e => {\n  \n        e.preventDefault()\n\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .editWork(work_id, this.state)\n            .then(() => {\n                this.props.updateWork()      \n                this.props.closeModal()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n        console.log('The image:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })\n                console.log(this.state.work.image)\n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {            \n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))          \n                this.setState({ collaborators: filteredUsers, work: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                this.setState({ boards: boards, work: boards })\n            })\n            .catch(err => console.log(err))\n    }  \n\n    render() {\n\n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit} >\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.work.title} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\" name=\"description\" value={this.state.work.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.work.date} onChange={this.handleInputChange} />\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.work.status} onChange={this.handleInputChange} > \n                            <option>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"coworkers\" className=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control as=\"select\" type=\"select\" value={this.state.work.coworkers} custom multiple name=\"coworkers\" onChange={this.handleInputMultiple}>\n                            <option disabled style={{marginBottom:\"10px\", fontStyle:\"italic\", fontSize:\"15px\"}}>Press Ctrl or Shift to select several</option>\n                            {this.state.collaborators.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}   \n                        </Form.Control>\n                    </Form.Group> \n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.work.board} onChange={this.handleInputChange} >\n                            <option>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Image (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Save'}</Button>\n                    </div>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkEdit\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js",["194"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport Loader from \"../../../shared/Spinner/Loader\"\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {\n                title: '',\n                description: '',\n                date: '',\n                status: '',\n                image: '',\n                coworkers: [],\n                board: \"\",\n                author: this.props.loggedUser ? this.props.loggedUser._id : '' \n            },\n            user: this.props.loggedUser,\n            friends: [],\n            boards: [],\n            uploadingActive: false\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService() \n    }\n\n    componentDidMount = () => { \n        this.getUser()\n        this.displayFriends()        \n        this.displayBoards()\n    }\n\n    getUser = () => {\n        const user_id = this.props.loggedUser._id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n     }\n    \n    handleInputChange = e => this.setState({ work: { ...this.state.work, [e.target.name]: e.target.value } })\n\n\n    handleInputMultiple = e => {\n        const selected = []\n        e.target.childNodes.forEach(e => e.selected === true ? selected.push(e.value) : null)\n        this.setState({ work: { ...this.state.work, [e.target.name]: selected } })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.worksService\n            .saveWork(this.state)\n            .then(res => {\n                this.props.updateList()\n                this.props.closeModal()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n        console.log('The image:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })\n                console.log(this.state.work.image)\n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {   \n                \n                let workCopy = {...this.state.work}\n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))\n\n                const firstFriend = [filteredUsers[0]]              \n                workCopy.coworkers = firstFriend\n          \n                this.setState({ friends: filteredUsers, work: workCopy})\n            })           \n            .catch(err => console.log(err))\n    } \n    \n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                let workCopy = {...this.state.work}\n\n                const firstBoard = boards[0]              \n                workCopy.board = firstBoard\n          \n                this.setState({ boards: boards, work: workCopy })\n            })\n            .catch(err => console.log(err))\n    }    \n\n    render() {\n    \n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit}>\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\"  name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.status} onChange={this.handleInputChange} > \n                            <option>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control className=\"form myselect\" as=\"select\" type=\"select\" value={this.state.coworkers} custom multiple name=\"coworkers\" onChange={this.handleInputMultiple}>\n                            <option disabled style={{marginBottom:\"10px\", fontStyle:\"italic\", fontSize:\"15px\"}}>Press Ctrl or Shift to select multiple</option>\n                            {this.state.friends.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}   \n                        </Form.Control>\n                        <small>* Start following someone to add a coworker</small>\n                    </Form.Group>            \n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.board} onChange={this.handleInputChange} >\n                            <option>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Imagen (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Create'}</Button>\n                    </div>\n\n                    <small>* All fields are required</small>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js",["195"],"import './Loader.css'\nexport default () => <div className=\"loader\"></div>","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js",["196","197","198","199"],"import React, { Component } from 'react'\n\nimport Home from \"../pages/Home/Home\"\n\n// ========== BOARDS ========== \nimport MyBoards from \"../pages/Board/MyBoards\"\nimport BoardDetails from \"../pages/Board/Board-details\"\n\n// ========== LAYOUT ========== \nimport Navigation from \"../layout/Navigation/Navigation\"\n\n// ========== IMAGES ========== \nimport ImagesList from \"../pages/Images-list/Images-list\"\n\n// ========== AUTH ========== \nimport AuthServices from '../../service/auth.service'\nimport Signup from \"../pages/Auth/Signup\"\nimport Login from \"../pages/Auth/Login\"\n\n// ========== ACCOUNT ========== \nimport Account from \"../pages/Account/Account\"\nimport WorksList from \"../pages/Portfolio/Works-list/Works-list\"\nimport WorkDetails from '../pages/Portfolio/Work-details/Work-details'\nimport Follows from \"../pages/Account/Follows\"\n\n// ========== PROFESSIONALS ========== \nimport UsersList from \"../pages/Professionals/Users-list/Users-list\"\nimport UserDetails from '../pages/Professionals/User-details/User-details'\nimport FashionUsers from \"../pages/Professionals/Fashion/Fashion-users\"\nimport MakeupUsers from \"../pages/Professionals/Makeup/Makeup-users\"\nimport ModelingUsers from \"../pages/Professionals/Modeling/Modeling-users\"\nimport PhotographyUsers from \"../pages/Professionals/Photography/Photography-users\"\nimport StylismUsers from \"../pages/Professionals/Stylism/Stylism-users\"\n\n// ========== PROFESSIONALS ========== \nimport Chat from \"../pages/Chat/Chat\"\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: undefined,\n      mount: false\n    }\n    this.authServices = new AuthServices()\n  }\n\n  // Check if an user is already logged\n  componentDidMount = () => {\n\n    this.authServices   \n      .isLoggedIn()\n      .then(response => this.setTheUser(response.data))\n      .catch(err => this.setTheUser(undefined))\n  }\n\n  setTheUser = user => this.setState({ loggedInUser: user, mount: true }, () => console.log(\"The current user is: \", this.state))\n\n  render() {\n\n    return (\n      <>\n        <Navigation storeUser={this.setTheUser} loggedUser={this.state.loggedInUser} {...this.props} />   \n    \n        {this.state.mount ? \n          \n          <main>\n          <Switch> \n\n            <Route path=\"/\" exact render={props => <Home loggedUser={this.state.loggedInUser} loggedUser={this.state.loggedInUser} {...props} />} />                  \n                                \n            {/* <!-- Auth --> */}\n            <Route path=\"/signup\" render={props => <Signup storeUser={this.setTheUser} {...props} />} />\n            <Route path=\"/login\" render={props => <Login storeUser={this.setTheUser} {...props} />} />   \n            <Route path=\"/logout\" render={() => <Redirect to=\"/login\" />} />            \n           \n            {this.state.loggedInUser\n                ? \n                <>\n             \n                <Route path='/chat' render={() => <Chat loggedUser={this.state.loggedInUser} />} /> \n                  \n                {/* <!-- Account --> */}\n                <Route path=\"/account/:user_id\" render={props => <Account loggedUser={this.state.loggedInUser} {...props} />} /> \n                <Route exact path='/works/:user_id' exact render={props => <WorksList loggedUser={this.state.loggedInUser} {...props} /> } />\n                <Route exact path=\"/works/details/:work_id\" exact render={props => <WorkDetails loggedUser={this.state.loggedInUser} {...props} />} />          \n                <Route exact path='/:user_id/follows' exact render={props => <Follows loggedUser={this.state.loggedInUser} {...props} />} />                \n                <Route path='/myBoards/:user_id' render={props => <MyBoards loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path='/details/:board_id' render={props => <BoardDetails loggedUser={this.state.loggedInUser} {...props} />} />\n\n                {/* <!-- Professionals --> */}\n                <Route path=\"/professionals/:user_id\" render={props => <UserDetails loggedUser={this.state.loggedInUser} {...props} />} /> \n                <Route path='/professionals' exact render={props => <UsersList loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path=\"/fashion\" render={() => <FashionUsers />} />\n                <Route path=\"/makeup\" render={() => <MakeupUsers />} />\n                <Route path=\"/modeling\" render={() => <ModelingUsers />} /> \n                <Route path=\"/photography\" render={() => <PhotographyUsers />} /> \n                <Route path=\"/stylism\" render={() => <StylismUsers />} /> \n\n                {/* <!-- Images -->  */}\n                <Route path=\"/search/:user_id\" exact render={(props) => <ImagesList loggedUser={this.state.loggedInUser} storeUser={this.setTheUser} {...props} />} />\n                </>\n                :\n                <Redirect to=\"/login\"/>             \n            }    \n            \n          </Switch>\n          </main>\n          \n          : null\n          \n        }       \n      </>\n    )\n  }\n}\n\nexport default App;\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js",["200"],"import { Col, Card } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\n\nconst WorkCard2 = ({ image, title, _id }) => {\n    return (\n        <Col lg={3} className=\"pexelimg-container text-center mt-5 mr-4 \">\n            <h6 className=\"mb-4\">{title.trim().replace(/^\\w/, (c) => c.toUpperCase())}</h6>\n            <div className=\"pexelimg-card \" key={_id}>\n       \n                    <Card.Img variant=\"top\" src={image} />          \n  \n            </div>\n        </Col>\n    )\n}  \n\nexport default WorkCard2","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Slider.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/Scroll.js",[],["201","202"],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":2,"column":31,"nodeType":"209","messageId":"210","endLine":2,"endColumn":35},{"ruleId":"211","severity":1,"message":"212","line":54,"column":71,"nodeType":"213","messageId":"214","endLine":54,"endColumn":73},{"ruleId":"215","severity":1,"message":"216","line":94,"column":208,"nodeType":"217","endLine":94,"endColumn":224},{"ruleId":"218","severity":1,"message":"219","line":68,"column":37,"nodeType":"220","endLine":68,"endColumn":76},{"ruleId":"207","severity":1,"message":"221","line":4,"column":43,"nodeType":"209","messageId":"210","endLine":4,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":61,"column":70,"nodeType":"213","messageId":"214","endLine":61,"endColumn":72},{"ruleId":"207","severity":1,"message":"222","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":115,"column":57,"nodeType":"220","endLine":115,"endColumn":90},{"ruleId":"218","severity":1,"message":"219","line":128,"column":53,"nodeType":"220","endLine":128,"endColumn":80},{"ruleId":"211","severity":1,"message":"212","line":34,"column":65,"nodeType":"213","messageId":"214","endLine":34,"endColumn":67},{"ruleId":"211","severity":1,"message":"212","line":51,"column":66,"nodeType":"213","messageId":"214","endLine":51,"endColumn":68},{"ruleId":"211","severity":1,"message":"212","line":98,"column":66,"nodeType":"213","messageId":"214","endLine":98,"endColumn":68},{"ruleId":"211","severity":1,"message":"212","line":114,"column":66,"nodeType":"213","messageId":"214","endLine":114,"endColumn":68},{"ruleId":"223","severity":1,"message":"224","line":2,"column":1,"nodeType":"225","endLine":2,"endColumn":52},{"ruleId":"215","severity":1,"message":"216","line":73,"column":95,"nodeType":"217","endLine":73,"endColumn":131},{"ruleId":"215","severity":1,"message":"216","line":88,"column":53,"nodeType":"217","endLine":88,"endColumn":58},{"ruleId":"215","severity":1,"message":"216","line":89,"column":61,"nodeType":"217","endLine":89,"endColumn":66},{"ruleId":"215","severity":1,"message":"216","line":90,"column":55,"nodeType":"217","endLine":90,"endColumn":60},{"ruleId":"207","severity":1,"message":"222","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":14},{"ruleId":"203","replacedBy":"226"},{"ruleId":"205","replacedBy":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["228"],["229"],"no-global-assign","no-unsafe-negation"]