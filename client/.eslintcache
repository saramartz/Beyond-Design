[{"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js":"1","/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js":"2","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js":"3","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js":"4","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js":"5","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js":"6","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js":"7","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js":"8","/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js":"9","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js":"10","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js":"11","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js":"12","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js":"13","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js":"14","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js":"15","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js":"16","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js":"17","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js":"18","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js":"19","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js":"20","/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js":"21","/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js":"22","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js":"23","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js":"24","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js":"25","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js":"26","/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js":"27","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js":"28","/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js":"29","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js":"30","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js":"31","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js":"32","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js":"33","/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js":"34","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js":"35","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js":"36","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js":"37","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js":"38","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js":"39","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js":"40","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Slider.js":"41","/Users/SaraMartz/Desktop/final-project-app/client/src/Scroll.js":"42","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Alert/Alert.js":"43","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-delete.js":"44","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Alert/Alert-error.js":"45","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details-otherUser.js":"46","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Footer/Footer.js":"47"},{"size":524,"mtime":1609980610000,"results":"48","hashOfConfig":"49"},{"size":598,"mtime":1608204334000,"results":"50","hashOfConfig":"49"},{"size":2431,"mtime":1609894797000,"results":"51","hashOfConfig":"49"},{"size":4946,"mtime":1609947137000,"results":"52","hashOfConfig":"49"},{"size":4153,"mtime":1609953883000,"results":"53","hashOfConfig":"49"},{"size":9347,"mtime":1609986374000,"results":"54","hashOfConfig":"49"},{"size":4074,"mtime":1608574328000,"results":"55","hashOfConfig":"49"},{"size":8953,"mtime":1609959794000,"results":"56","hashOfConfig":"49"},{"size":5843,"mtime":1609873956000,"results":"57","hashOfConfig":"49"},{"size":2542,"mtime":1609948285000,"results":"58","hashOfConfig":"49"},{"size":2821,"mtime":1609892466000,"results":"59","hashOfConfig":"49"},{"size":6907,"mtime":1609947232000,"results":"60","hashOfConfig":"49"},{"size":1524,"mtime":1608574245000,"results":"61","hashOfConfig":"49"},{"size":9138,"mtime":1609960000000,"results":"62","hashOfConfig":"49"},{"size":1297,"mtime":1608274265000,"results":"63","hashOfConfig":"49"},{"size":1293,"mtime":1608274271000,"results":"64","hashOfConfig":"49"},{"size":1306,"mtime":1608274277000,"results":"65","hashOfConfig":"49"},{"size":1302,"mtime":1608274253000,"results":"66","hashOfConfig":"49"},{"size":1293,"mtime":1608274284000,"results":"67","hashOfConfig":"49"},{"size":4836,"mtime":1608574663000,"results":"68","hashOfConfig":"49"},{"size":485,"mtime":1608204327000,"results":"69","hashOfConfig":"49"},{"size":664,"mtime":1607889313000,"results":"70","hashOfConfig":"49"},{"size":1851,"mtime":1609961832000,"results":"71","hashOfConfig":"49"},{"size":741,"mtime":1608153788000,"results":"72","hashOfConfig":"49"},{"size":2721,"mtime":1609874854000,"results":"73","hashOfConfig":"49"},{"size":1223,"mtime":1608560815000,"results":"74","hashOfConfig":"49"},{"size":479,"mtime":1608557489000,"results":"75","hashOfConfig":"49"},{"size":585,"mtime":1608274137000,"results":"76","hashOfConfig":"49"},{"size":640,"mtime":1607699220000,"results":"77","hashOfConfig":"49"},{"size":7211,"mtime":1609962275000,"results":"78","hashOfConfig":"49"},{"size":7896,"mtime":1609962074000,"results":"79","hashOfConfig":"49"},{"size":10966,"mtime":1609961569000,"results":"80","hashOfConfig":"49"},{"size":537,"mtime":1608233857000,"results":"81","hashOfConfig":"49"},{"size":310,"mtime":1607699213000,"results":"82","hashOfConfig":"49"},{"size":73,"mtime":1607256110000,"results":"83","hashOfConfig":"49"},{"size":6249,"mtime":1609950035000,"results":"84","hashOfConfig":"49"},{"size":2417,"mtime":1608571286000,"results":"85","hashOfConfig":"49"},{"size":2891,"mtime":1608574424000,"results":"86","hashOfConfig":"49"},{"size":692,"mtime":1608237539000,"results":"87","hashOfConfig":"49"},{"size":570,"mtime":1609950040000,"results":"88","hashOfConfig":"49"},{"size":2329,"mtime":1608573579000,"results":"89","hashOfConfig":"49"},{"size":245,"mtime":1608568368000,"results":"90","hashOfConfig":"49"},{"size":775,"mtime":1609949074000,"results":"91","hashOfConfig":"49"},{"size":1030,"mtime":1609945982000,"results":"92","hashOfConfig":"49"},{"size":784,"mtime":1609949071000,"results":"93","hashOfConfig":"49"},{"size":4835,"mtime":1609949726000,"results":"94","hashOfConfig":"49"},{"size":2671,"mtime":1609986001000,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"kxha0u",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js",[],["209","210"],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js",["211","212"],"import React, { Component } from 'react'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport UserService from '../../../service/account.service'\nimport BoardService from \"../../../service/boards.service\"\nimport BoardForm from \"./Board-form\"\nimport BoardCard from \"./Board-card\"\nimport Popup from \"../../shared/Popup/Popup-board\"\nimport Fade from 'react-reveal/Fade'\n\nclass MyBoards extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {          \n            user: this.props.loggedUser,\n            boards: [],\n            showModal: false            \n        }\n        this.userService = new UserService()\n        this.boardsService = new BoardService()\n    }   \n\n    componentDidMount = () => {\n        this.getUser()\n        this.displayBoards()\n    }   \n    \n    getUser = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => this.setState({boards: res.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n    \n    render() {\n        return (\n            <>\n                <Fade>\n                <Container>\n                    <Row className=\"mt-5 mb-5\"> \n                        \n                        {\n                           this.state.boards.filter(elm => elm.author == this.state.user._id).map(elm => <BoardCard key={elm._id} {...elm} />) \n                        }    \n                   </Row>\n                    \n                    <Row className=\" text-center \">\n                       <Col>\n                         <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"lg\" className=\"btn-obscure mt-5\">New Board</Button>\n                    </Col>\n                    </Row>\n                </Container>\n                </Fade>\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} title=\"Board\">\n                    <BoardForm closeModal={() => this.handleModal(false)} getBoards={this.displayBoards} loggedUser={this.props.loggedUser} {...this.props}/>\n                </Popup> \n            </>      \n        )\n    }\n}\n\nexport default MyBoards","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js",["213"],"import React, { Component } from 'react'\nimport BoardService from '../../../service/boards.service'\nimport PopupDelete from \"../../shared/Popup/Popup-delete\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { XCircle } from 'react-bootstrap-icons';\n\nimport Fade from 'react-reveal/Fade'\n\n\nclass BoardDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            board: {},           \n            hover: false,\n            showDeleteModal: false\n        }\n        this.boardsService = new BoardService()\n    }\n\n    componentDidMount = () => this.displayBoard()\n\n    displayBoard = () => {\n        const board_id = this.props.match.params.board_id\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({ board: res.data }))\n            .catch(err => console.log(err))   \n    }\n\n    deleteBoard = () => {\n        const board_id = this.props.match.params.board_id\n\n        this.boardsService\n            .deleteBoard(board_id)\n            .then(res => {\n                this.setState({ board: res.data })\n                this.props.history.push(`/myBoards/${this.props.loggedUser._id}`)  \n            })\n            .catch(err => console.log(err))   \n    }\n\n    getImages = (image) => {  \n        let idx = this.state.board.images.indexOf(image)\n        this.state.board.images.splice(idx, 1)\n\n        let photos = this.state.board.images\n  \n        this.setState({ board: {...this.state.board, images: photos } }, () => this.deleteImage())         \n    }\n\n    deleteImage = () => {                \n        const board_id = this.props.match.params.board_id\n            \n        this.boardsService\n            .editBoard(board_id, this.state)\n            // .then(() => console.log(\"good\"))            \n            .catch((err) => console.log(err))\n    }\n\n    toggleHover = (state) => this.setState({hover: state})\n\n    handleDeleteModal = visible => this.setState({ showDeleteModal: visible })\n\n    render() {\n        \n        let trash;\n            if (this.state.hover) {\n                trash = {color: '#c90a0a'}\n            } else {\n                trash = {color: '#FFFFFF'}\n            }\n\n        return (\n            <>\n                <Fade>\n                <Container className=\"images-container\">\n         \n                <Row>\n                \n                            {this.state.board.images\n                                &&\n                                this.state.board.images.map(elm => {\n                                    return (\n                                        <Col md={2} className=\"pexelimg-container mr-5 ml-5 mb-5 mt-5\">\n                                            <div className=\"pexelimg-card\" key={elm}>\n                                                <Card.Img variant=\"top\" src={elm} /> \n                                            </div>                                       \n                                    \n                                            <XCircle style={trash} onMouseEnter={this.toggleHover} onMouseLeave={() => this.toggleHover(false)} className=\"what\" size={20} onClick={() => this.getImages(elm)} className=\"mb-4\" />                                            \n\n                                        </Col>\n                                    )                                    \n                                })                         \n                            } \n                </Row> \n\n                <Row>\n                    <Col md={12} className=\"text-center\">\n                                \n                        <PopupDelete show={this.state.showDeleteModal} handleModal={this.handleDeleteModal} title={\"DELETE BOARD\"}>                        \n                            <Row className='justify-content-center'>\n                                <Col xs='auto'>\n                                    <Button onClick={() => this.handleDeleteModal(false)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Close</Button>\n                                </Col>\n                                <Col xs='auto'>\n                                    <Button onClick={this.deleteBoard} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-delete\">Delete</Button>                     \n                                </Col>\n                            </Row>\n                        </PopupDelete>\n\n                        <Button onClick={() => this.handleDeleteModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 btn-delete\">Delete</Button>\n                        <Link to={`/myBoards/${this.props.loggedUser._id}`}  className=\"btn-sm ml-5 btn-obscure\">Back</Link>\n                    </Col> \n                </Row>    \n               \n                </Container>         \n\n                </Fade>\n            </>    \n        )    \n    }\n}\n\nexport default BoardDetails\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js",["214"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js",["215"],"import React, { Component } from 'react'\n\nimport { createClient } from 'pexels';\nimport { Container, Row, Col, Form, Card, Button } from 'react-bootstrap';\n\nimport { Heart } from 'react-bootstrap-icons';\n\nimport Fade from 'react-reveal/Fade'\n\nimport UserService from '../../../service/account.service'\nimport ImageForm from \"./Image-form\"\nimport PopupBoard from \"../../shared/Popup/Popup-board\"\n\nconst client = createClient('563492ad6f91700001000001320414824c594940b38138c28df3e9e3');\n\nclass ImagesList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: [],             \n            search: \"\",\n            favImages: [],\n            savedImage: \"\",\n            showModal: false,\n            hover: false\n        }\n        this.userService = new UserService()       \n    }\n\n    componentDidMount = () => {\n        this.displayImages() \n    }\n\n    // ========== DISPLAY & SEARCH IMAGES ==========\n\n    displayImages = () => {\n        client.photos\n            .search({ query: \"fashion\", per_page: 16 })\n            .then(res => this.setState({images: res.photos}))\n            .catch(err => console.log(err))    \n    }\n\n    searchImage = e => {\n        e.preventDefault()\n\n        const value = e.target.value\n        this.setState({ search: value  }, this.searchResult )      \n    }\n\n    searchResult = () => {          \n         client.photos\n            .search({ query: this.state.search, per_page: 16 })\n            .then(res => this.state.search.length > 0 ? this.setState({images: res.photos}) : this.setState(this.displayImages))\n            .catch(err => console.log(err))           \n    } \n    \n    // ========== ADD IMAGES TO BOARD ==========\n\n    getFavImages = (src) => {  \n        let photos = this.state.favImages.concat(src)\n        this.setState({ favImages: photos })         \n    }\n\n    openModal = (url) => {\n        this.setState({savedImage: url}, () => this.handleModal(true))\n    }\n\n    toggleHover = (state) => this.setState({hover: state})\n\n    handleModal = visible => this.setState({ showModal: visible })\n    \n    render() {\n\n           let heart;\n            if (this.state.hover) {\n                heart = {color: '#000000', background: \"rgba(255,255,255,0.31)\"}\n            } else {\n                heart = {color: '#FFFFFF'}\n            }\n\n        return (\n            \n            <>\n                <Fade>\n                <Container className=\"images-container\">\n                    <Row>  \n                        <Col md={12} sm={6} className=\"mt-1 mb-5 text-center searchform\">                             \n                            <Form.Control type=\"text\" className=\"searchBar\" placeholder=\"Search\" value={this.state.search} onChange={this.searchImage} />\n                        </Col>\n\n                        {  this.state.images.map(elm => {\n                                return (\n                                    <Col lg={3} className=\"pexelimg-container\">\n                                        <div className=\"pexelimg-card\" key={elm.id}>\n                                            <Card.Img variant=\"top\" src={elm.src.medium} />\n                                        </div>\n                                        <Heart style={heart} onMouseEnter={this.toggleHover} onMouseLeave={() => this.toggleHover(false)} className=\"heart\" size={40} onClick={() => {this.openModal(elm.src.medium)}} />                                            \n                                    </Col>\n                                )\n                            })                    \n                        }                        \n                    </Row>\n                </Container>\n                </Fade>\n\n                 <PopupBoard show={this.state.showModal} handleModal={this.handleModal} title=\"Choose your board\">\n                    <ImageForm closeModal={() => this.handleModal(false)} loggedUser={this.props.loggedUser} favImages={this.state.savedImage}/>\n                </PopupBoard>  \n            </>      \n        )\n    }\n}\n\nexport default ImagesList\n\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js",["216"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport UserService from '../../../../service/account.service'\nimport WorkCard from \"./Work-card\"\nimport Fade from 'react-reveal/Fade'\nimport { Container, Row, Button, Col } from 'react-bootstrap'\nimport WorkForm from '../Work-form/Work-form'\nimport Popup from \"../../../shared/Popup/Popup\"\n// import Loader from '../shared/Spinner/Loader'\n\nclass WorksList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            works: [],            \n            showModal: false            \n        }\n        this.worksService = new WorkService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n        this.displayWorks()\n    }\n\n    getUser = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    displayWorks = () => {\n        this.worksService\n            .getWorks()\n            .then(res => this.setState({works: res.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n   \n    render() {\n        return (\n            \n            <>\n                <Fade>\n                <Container className=\"portfolio-container mb-5 mt-5\">\n                    <Row>\n                        <Col className=\"mt-5 text-center\">\n                            <h2>Portfolio</h2>\n                        </Col>                        \n                    </Row> \n                    <Row className=\" mb-5 d-flex flex-row justify-content-center\">                                      \n            \n                        {\n                           this.state.works.filter(elm => elm.author == this.state.user._id || elm.coworkers.includes(this.state.user._id)).map(elm => <WorkCard key={elm._id} {...elm} />) \n                        }                   \n                                                \n                    </Row>\n\n                    <Row >\n                        <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn btn-obscure mb-5\">Create New Work</Button>\n                    </Row>\n\n                </Container>            \n\n                </Fade>\n\n                 <Popup show={this.state.showModal} handleModal={this.handleModal} title=\" \">\n                    <WorkForm closeModal={() => this.handleModal(false)} updateList={this.displayWorks} loggedUser={this.props.loggedUser} {...this.props}/>\n                </Popup>             \n            </> \n        )\n    }\n} \n\nexport default WorksList\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js",["217","218"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport BoardService from '../../../../service/boards.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport WorkEdit from \"../Work-edit/Work-edit\"\nimport Popup from \"../../../shared/Popup/Popup\"\nimport PopupDelete from \"../../../shared/Popup/Popup-delete\"\nimport Fade from 'react-reveal/Fade'\n\nclass WorkDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            theBoard: {},\n            coworkers: [],\n            user: this.props.loggedUser,\n            showModal: false,\n            showDeleteModal: false\n        }\n        this.worksService = new WorkService()\n        this.boardsService = new BoardService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.displayWork() \n        this.displayCoworkers()\n    }\n\n    displayWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .then(() => this.displayBoard())\n            .then(() => this.displayCoworkers())\n            .catch(err => console.log(err))   \n    }\n\n    displayBoard = () => {        \n        const board_id = this.state.work.board\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({theBoard: res.data}))\n            .catch(err => console.log(err)) \n    }\n\n    deleteWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .deleteWork(work_id)\n            .then(res => {\n                this.setState({ work: res.data })\n                this.props.history.push(`/works/${this.state.user._id}`)  \n            })\n            .catch(err => console.log(err))   \n    }\n\n\n    displayCoworkers = () => {\n        this.userService\n            .getUsers()\n            .then(res => {                 \n                let filteredUsers = res.data.filter(elm => this.state.work.coworkers.includes(elm._id))\n                this.setState({ coworkers: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    handleModal = visible => this.setState({ showModal: visible })\n    handleDeleteModal = visible => this.setState({ showDeleteModal: visible })\n\n    render() {\n\n        return (\n        \n        <>\n\n        <Fade>\n        <Container className = \"portfolio-container \">\n    \n       { this.state.theBoard.images && this.state.coworkers ?\n            <Row>\n                <Col md={5} className=\"account-section1 portfolio-details text-center mt-4\">\n                    <h3 className=\"\">{this.state.work.title}</h3>\n                    <div className=\"user-img mt-5\">\n                        <Card.Img className=\"mb-4\" src={this.state.work.image} alt={this.state.user.title} />\n                            </div>\n                    <h6 className=\"mb-5\">Date: {this.state.work.date}</h6>       \n                    <h5 className=\"mt-5\">Status</h5>   \n                    <hr/>        \n                    <p> {this.state.work.status}</p>\n                                                                                                       \n                    <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Edit</Button>\n\n                    <PopupDelete show={this.state.showDeleteModal} handleModal={this.handleDeleteModal} title={\"DELETE WORK\"}>                        \n                        <Row className='justify-content-center'>\n                            <Col xs='auto'>\n                                <Button onClick={() => this.handleDeleteModal(false)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Close</Button>\n                            </Col>\n                            <Col xs='auto'>\n                                <Button onClick={this.deleteWork} variant=\"none\" size=\"sm\" className=\"create-btn mt-5 btn-delete\">Delete</Button>\n                            </Col>\n                        </Row>\n                    </PopupDelete>\n                    <Button onClick={() => this.handleDeleteModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn mt-5 btn-delete\">Delete</Button>\n                </Col>\n                            \n                <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">\n                                \n                    <div className=\"description\">\n                        <h3 >Description</h3>\n                        <hr />\n                        <p className=\"mb-5\">{this.state.work.description}</p>\n                        <h5>Coworkers</h5>\n                        <hr />\n                        <div className=\"\">\n                            <div className=\"coworker coworkers-container mt-4 d-flex flex-wrap justify-content-between\">\n                                        {this.state.coworkers.map(elm => {\n                                         return (   <div className=\"coworkerimg-container text-center mr-5\">\n                                                        <img key={elm} src={elm.image} />\n                                                        <h6 className=\"mt-3\">{elm.name}</h6>\n                                                    </div>)\n                                        })}                                  \n                            </div>             \n                        </div>\n                        <h5>Board</h5>\n                        <hr/>\n                    <div className=\"d-flex flex-row justify-content-around flex-wrap userimg-container mb-4 ml-4\">\n                           \n                                    {this.state.theBoard.images.map(elm => {\n                                        return (<Col>\n                                            \n                                                    <img key={elm} src={elm} />\n                                                    \n                                                </Col>)\n                                    })}\n                         </div>\n                    </div>\n                                \n                    <div></div>\n                </Col>\n            </Row>\n            : null  }\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} >\n                    <WorkEdit closeModal={() => this.handleModal(false)} updateWork={this.displayWork} loggedUser={this.props.loggedUser} {...this.props}/>\n                </Popup>\n        \n        </Container> \n                \n        </Fade>  \n            \n           </> \n        )    \n    }\n}\n\nexport default WorkDetails\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js",["219"],"import React, { Component } from 'react'\nimport ProfessionalsService from '../../../../service/professionals.service'\nimport WorkService from '../../../../service/works.service'\nimport UserService from '../../../../service/account.service'\nimport WorkCard2 from \"../../Portfolio/Works-list/Work-card2\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport Fade from 'react-reveal/Fade'\n\nimport linkedin from \"../../Account/linkedin.png\"\nimport insta from \"../../Account/insta.png\"\nimport whatsapp from \"../../Account/whatsapp.png\"\nimport email from \"../../Account/mail.png\"\n\nclass UserDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            otherUser: {},\n            user: {},\n            works: []\n        }\n        this.professionalsService = new ProfessionalsService()\n        this.worksService = new WorkService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {        \n        this.displayUser()        \n        this.getLoggedUser()         \n        this.displayWorks()   \n    } \n    \n    displayWorks = () => {\n        this.worksService\n            .getWorks()\n            .then(res => {     \n                const works = res.data.filter(elm => elm.author == this.state.otherUser._id || elm.coworkers.includes(this.state.otherUser._id) )            \n               \n                this.setState({ works: works })\n            })\n            .catch(err => console.log(err))\n    }\n\n    // ========== FOLLOWS ========== \n\n    checkUserFriends() {\n       return this.props.loggedUser.follows.includes(this.state.otherUser._id) ? this.setState({ otherUser: {...this.state.otherUser,  weAreFriends: true } }) : null    \n    }  \n    \n    addFriend = (friend_id) => {  \n        let id = this.state.user.follows.concat(friend_id)\n        \n        this.setState({ user: { ...this.state.user, follows: id }, otherUser: { ...this.state.otherUser, weAreFriends: true } }, () => this.updateOtherUserInfo())  \n    } \n\n    // LOGGED USER\n    getLoggedUser() {\n        this.userService\n            .getUser(this.props.loggedUser._id)\n            .then((res) => this.setState({ user: res.data }))\n            .catch((err) => console.log(err))\n    }\n\n    updateUserInfo = () => {         \n        const user_id = this.state.user._id\n            \n        this.userService\n            .editUser(user_id, this.state)               \n            .catch((err) => console.log(err))\n    }    \n\n    // OTHER USER\n    displayUser = () => {\n        const user_id = this.props.match.params.user_id       \n\n        this.professionalsService\n            .getUser(user_id)\n            .then(res => this.setState({ otherUser: res.data }))\n            \n            .catch(err => console.log(err))   \n    } \n    \n    updateOtherUserInfo = () => {         \n        const user_id = this.state.otherUser._id\n            \n        this.professionalsService\n            .editOtherUser(user_id, this.state.otherUser) \n            .then(() => this.updateUserInfo())\n            .then(() => this.getLoggedUser())\n            .then(() => this.displayUser())\n            .then(() => this.checkUserFriends())\n            .catch((err) => console.log(err))\n    }   \n\n    render() {\n\n        return (\n            <>\n                <Fade>\n                <Container className=\"account-details mb-5\">\n                    <Row>        \n                        <Col md={5} className=\"account-section1 text-center\">               \n                            <div className=\"account-img\">                                \n                                <Card.Img className=\"mb-4\" src={this.state.otherUser.image} alt={this.state.otherUser.name} />                       \n                            </div> \n                            <h2 className=\"mb-2\">{this.state.otherUser.name}</h2>\n                                <p>{this.state.otherUser.specialty}</p>\n\n                            <Row className=\"mb-3\">\n                                <Col>\n                                    <a href={this.state.otherUser.instagram} target=\"_blank\" rel=\"noreferrer\">\n                                        <img\n                                            alt=\"instagram logo\"\n                                            src={insta}\n                                            className=\"mt-1\"\n                                            style={{width: '46px', opacity: 0.5 }}\n                                        />\n                                    </a>\n                                </Col>\n                                <Col>\n                                    <a href={this.state.otherUser.linkedin} target=\"_blank\" rel=\"noreferrer\">\n                                        <img\n                                            alt=\"linkedin logo\"\n                                            src={linkedin}\n                                            className=\"mt-1\"\n                                            style={{width: '46px', opacity: 0.5 }}\n                                        />\n                                    </a>\n                                </Col>\n                                <Col>\n                                    <a href={`https://api.whatsapp.com/send?phone=${this.state.otherUser.mobile}&text=%20Hi!`} target=\"_blank\" rel=\"noreferrer\">\n                                        <img\n                                            alt=\"whatsapp logo\"\n                                            src={whatsapp}\n                                            className=\"\"\n                                            style={{width: '55px', opacity: 0.5 }}\n                                        />\n                                    </a>                                        \n                                </Col>\n                                <Col>\n                                    <a href={\"mailto:\" + this.state.otherUser.email} target=\"_blank\" rel=\"noreferrer\">\n                                        <img\n                                            alt=\"mail logo\"\n                                            src={email}\n                                            className=\"mt-1\"\n                                            style={{width: '53px', opacity: 0.5 }}\n                                        />\n                                    </a>                                        \n                                </Col>\n                            </Row>\n                                \n                            <p>{this.state.otherUser.introduction}</p>     \n                                                    \n                            <hr />                                   \n                   \n                         {!this.state.otherUser.weAreFriends ? <Button onClick={() => this.addFriend(this.state.otherUser._id)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Follow</Button> : null}   \n                                     \n                        </Col>\n                            \n                        <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">                                \n                            <div className=\"mt-5\">\n                                <h3>About</h3>\n                                <hr/>\n                                <p className=\"mb-5\">{this.state.otherUser.bio}</p> \n                                <h5>Related Info</h5>\n                                <hr />\n\n                                <div className=\"d-flex flex-row justify-content-between\">\n                                    <div>\n                                        <p>Currently</p> \n                                        <p>Ability to travel</p>\n                                    </div>\n                                    <div className=\"info\">\n                                        <p>{this.state.otherUser.target}</p>\n                                        <p>{this.state.otherUser.availability}</p>\n                                    </div>\n                                </div>                               \n                            </div>\n                                \n                            <div></div>   \n                        </Col>                        \n                    </Row>             \n                </Container>\n\n                <Container className=\"portfolio-container mb-5\" >     \n                    <Row>\n                        <Col className=\"mt-5 text-center\">\n                            <h2>Portfolio</h2>\n                        </Col>                        \n                    </Row>    \n                    <Row className=\" mb-5 d-flex flex-row justify-content-center\">\n                                        \n                            {\n                            this.state.works ? this.state.works.map(elm => <WorkCard2 key={elm._id} {...elm} />) : null\n                            } \n                     \n                    </Row>  \n               </Container>\n                </Fade>\n            </>    \n        )    \n    }\n}\n\nexport default UserDetails\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js",["220"],"import React, { Component } from 'react'\nimport UserService from \"../../../service/account.service\"\nimport BoardService from '../../../service/boards.service'\n\nimport { Form, Button } from 'react-bootstrap'\n\nclass ImageForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            board: {               \n                _id: \"\",\n                image: \"\"\n            },\n            user: this.props.loggedUser,\n            boards: [],    \n        }\n        this.boardsService = new BoardService()    \n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => { \n        this.displayBoards()\n    }\n    \n    handleInputChange = e => this.setState({ board: { ...this.state.board, [e.target.name]: e.target.value, image: this.props.favImages } }) \n      \n    handleSubmit = e => {  \n        e.preventDefault()\n        this.editBoard()\n    } \n\n    editBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .editBoard(board_id, this.state.board)\n            .then(() => {              \n               this.props.closeModal()           \n            })\n            .catch(err => console.log(err))\n    }\n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                this.setState({ boards: boards })\n            })\n            .catch(err => console.log(err))\n    }    \n    \n    displayBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({ board: res.data }))\n            .catch(err => console.log(err))   \n    } \n \n    render() {\n\n        return (\n            <>       \n                <Form onSubmit={this.handleSubmit} className=\"account-edit\">                  \n                    <Form.Group controlId=\"images\">                                          \n                        <Form.Control as=\"select\" name=\"_id\" type=\"select\" value={this.state._id} onChange={this.handleInputChange}>                       \n                            <option>Choose</option> \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button type=\"submit\" size=\"md\" variant=\"none\" className=\"btn-transparent  mt-4\">Save to board</Button>\n                    </div>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default ImageForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js",["221"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport Loader from \"../../../shared/Spinner/Loader\"\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkEdit extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            user: this.props.loggedUser,\n            collaborators: [],\n            boards: [],\n            showToast: false,\n            toastText: \"\"\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService()\n    }\n\n    componentDidMount = () => {\n        this.workInfo()\n        this.displayFriends()\n        this.displayBoards()\n    }\n\n    workInfo = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    handleInputChange = e => { this.setState({ work: { ...this.state.work, [e.target.name]: e.target.value } }) }\n    \n    handleInputMultiple = e => {\n        const selected = []\n        e.target.childNodes.forEach(e => e.selected === true ? selected.push(e.value) : null)\n        this.setState({ work: { ...this.state.work, [e.target.name]: selected } } )\n    }\n\n    handleSubmit = e => {\n  \n        e.preventDefault()\n\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .editWork(work_id, this.state)\n            .then(() => {\n                this.props.updateWork()      \n                this.props.closeModal()\n                this.props.handleToast(true, 'Successfully updated!')\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])     \n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {              \n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                   \n                })            \n            })\n            .catch(err => console.log(err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {            \n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))          \n                this.setState({ collaborators: filteredUsers, work: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                this.setState({ boards: boards, work: boards })\n            })\n            .catch(err => console.log(err))\n    }  \n\n    render() {\n\n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit} >\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.work.title} onChange={this.handleInputChange} minLength=\"5\" maxLength=\"27\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\" name=\"description\" value={this.state.work.description} onChange={this.handleInputChange} minLength=\"150\" maxLength=\"400\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.work.date} onChange={this.handleInputChange} required/>\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.work.status} onChange={this.handleInputChange} required> \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"coworkers\" className=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control as=\"select\" type=\"select\" value={this.state.work.coworkers} custom multiple name=\"coworkers\" onChange={this.handleInputMultiple}>\n                            <option disabled style={{marginBottom:\"10px\", fontStyle:\"italic\", fontSize:\"15px\"}}>Press Ctrl or Shift to select several</option>\n                            {this.state.collaborators.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}   \n                        </Form.Control>\n                    </Form.Group> \n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.work.board} onChange={this.handleInputChange} >\n                            <option value=\"Choose\" disabled>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Image (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Save'}</Button>\n                    </div>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkEdit\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js",["222"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport Loader from \"../../../shared/Spinner/Loader\"\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {\n                title: '',\n                description: '',\n                date: '',\n                status: '',\n                image: '',\n                coworkers: [],\n                board: \"\",\n                author: this.props.loggedUser ? this.props.loggedUser._id : '' \n            },\n            user: this.props.loggedUser,\n            friends: [],\n            boards: [],\n            uploadingActive: false,\n            showToast: true,\n            toastText: \"\"\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService() \n    }\n\n    componentDidMount = () => { \n        this.getUser()\n        this.displayFriends()        \n        this.displayBoards()\n    }\n\n    getUser = () => {\n        const user_id = this.props.loggedUser._id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n     }\n    \n    handleInputChange = e => this.setState({ work: { ...this.state.work, [e.target.name]: e.target.value } })\n\n\n    handleInputMultiple = e => {\n        const selected = []\n        e.target.childNodes.forEach(e => e.selected === true ? selected.push(e.value) : null)\n        this.setState({ work: { ...this.state.work, [e.target.name]: selected } })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.worksService\n            .saveWork(this.state)\n            .then(res => {\n                this.props.updateList()\n                this.props.closeModal()\n                this.props.handleToast(true, 'Successfully submitted!')\n            })\n            .catch(err => console.log({err})) \n    }\n\n    handleImageUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n    \n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {       \n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })           \n            })\n            .catch(err => console.log(err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {   \n                \n                let workCopy = {...this.state.work}\n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))\n\n                const firstFriend = [filteredUsers[0]]              \n                workCopy.coworkers = firstFriend\n          \n                this.setState({ friends: filteredUsers, work: workCopy})\n            })           \n            .catch(err => console.log(err))\n    } \n    \n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                let workCopy = {...this.state.work}\n\n                const firstBoard = boards[0]              \n                workCopy.board = firstBoard\n          \n                this.setState({ boards: boards, work: workCopy })\n            })\n            .catch(err => console.log(err))\n    }    \n\n    render() {\n    \n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit}>\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} minLength=\"5\" maxLength=\"27\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleInputChange} minLength=\"150\" maxLength=\"400\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleInputChange} required/>\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.status} onChange={this.handleInputChange} required> \n                            <option>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control className=\"form myselect\" as=\"select\" type=\"select\" value={this.state.coworkers} custom multiple name=\"coworkers\" onChange={this.handleInputMultiple}>\n                            <option disabled style={{marginBottom:\"10px\", fontStyle:\"italic\", fontSize:\"15px\"}}>Press Ctrl or Shift to select multiple</option>\n                            {this.state.friends.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}   \n                        </Form.Control>\n                        <small><i>* Start following someone to add a coworker</i></small>\n                    </Form.Group>            \n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.board} onChange={this.handleInputChange} >\n                            <option>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Imagen (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Create'}</Button>\n                    </div>\n\n                    <small><i>* All fields are required</i></small>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js",["223","224"],"import React, { Component } from 'react'\nimport AccountService from '../../../service/account.service'\nimport FilesService from '../../../service/upload.service'\nimport Loader from \"../../shared/Spinner/Loader\"\n\nimport { Form, Button, Col, Container, Row, Tabs, Tab } from 'react-bootstrap'\n\nclass AccountEdit extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            user: [],\n            uploadingActive: false,\n            showToast: false,\n            toastText: \"\"\n        }\n        this.accountService = new AccountService()\n        this.filesService = new FilesService()\n    }\n\n\n    componentDidMount = () => this.displayInfo()\n\n    displayInfo = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.accountService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))   \n    }\n\n    handleInputChange = e => { this.setState({ user: { ...this.state.user, [e.target.name]: e.target.value}})}\n\n    handleSubmit = e => {\n  \n        e.preventDefault()\n\n        const user_id = this.state.user._id\n\n        this.accountService\n            .editUser(user_id, this.state)\n            .then(() => {\n                this.props.updateUserInfo()          \n                this.props.closeModal()\n                this.props.handleToast(true, 'Successfully updated!')\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n        // console.log('The image:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {           \n                this.setState({\n                    user: { ...this.state.user, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })           \n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }  \n\n    render() {\n\n        return (\n            \n            <Container className=\"account-edit\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Row>                         \n                    <Col xs={4} md={6}>              \n                    {/* <!-- Name --> */}\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.user.name} onChange={this.handleInputChange} minLength=\"2\" maxlength=\"30\" required/>\n                    </Form.Group>\n    \n                    {/* <!-- Gender --> */}               \n                    <Form.Group controlId=\"gender\">\n                        <Form.Label>Gender</Form.Label>\n                        <Form.Control as=\"select\" name=\"gender\" value={this.state.user.gender} type=\"select\" onChange={this.handleInputChange}> \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"Female\">Female</option>\n                            <option value=\"Male\">Male</option>  \n                            <option value=\"Other\">Other</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    {/* <!-- Birthday --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Birthdate</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.user.date} onChange={this.handleInputChange} />                       \n                    </Form.Group> \n\n                    {/* <!-- Location --> */}                 \n                    {this.state.user.area ? \n                    <>\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control type=\"text\" name=\"city\" value={this.state.user.area.location[0]} onChange={this.handleInputChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"country\">\n                        <Form.Label>Province</Form.Label>\n                        <Form.Control type=\"text\" name=\"country\" value={this.state.user.area.location[1]} onChange={this.handleInputChange} required/>\n                    </Form.Group>\n                    </>\n                    : null}\n                    \n                    {/* <!-- Specialty --> */}                \n                    <Form.Group controlId=\"specialty\">\n                        <Form.Label>Specialty</Form.Label>\n                        <Form.Control as=\"select\" name=\"specialty\" type=\"select\" value={this.state.user.specialty} onChange={this.handleInputChange}> \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"Photographer\">Photographer</option>\n                            <option value=\"Fashion Designer\">Fashion Designer</option>  \n                            <option value=\"Stylist\">Stylist</option>\n                            <option value=\"Makeup Artist\">Makeup Artist</option>\n                            <option value=\"Model\">Model</option>\n                        </Form.Control>\n                    </Form.Group>\n                            \n                    {/* <!-- Introduction --> */}\n                    <Form.Group controlId=\"introduction\">\n                        <Form.Label>Introduce yourself</Form.Label>\n                        <Form.Control as=\"textarea\" rows={1} name=\"introduction\" type=\"textarea\" value={this.state.user.introduction} onChange={this.handleInputChange} minLength=\"5\" maxLength=\"75\"/>\n                    </Form.Group>    \n                            \n                    {/* <!-- Bio --> */}\n                    <Form.Group controlId=\"bio\">\n                        <Form.Label>Bio</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} name=\"bio\" type=\"textarea\" value={this.state.user.bio} onChange={this.handleInputChange} minLength=\"150\" maxLength=\"800\"/>\n                    </Form.Group>                           \n                </Col>\n                        \n                <Col xs={4} md={6}>\n                    {/* <!-- Target --> */}                  \n                    <Form.Group controlId=\"target\">\n                        <Form.Label>Currently</Form.Label>\n                        <Form.Control as=\"select\" name=\"target\" value={this.state.user.target} type=\"select\" onChange={this.handleInputChange}> \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"Looking to collaborate\">Looking to collaborate</option>\n                            <option value=\"Looking for co-workers\">Looking for co-workers</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    {/* <!-- Availability --> */}      \n                   <Form.Group controlId=\"status\">\n                        <Form.Label>Ability to travel</Form.Label>\n                        <Form.Control as=\"select\" name=\"availability\" value={this.state.user.availability} type=\"select\" onChange={this.handleInputChange}> \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"No\">No</option>\n                            <option value=\"Yes, across the country\">Yes, across the country</option>  \n                            <option value=\"Yes, across the continent\">Yes, across the continent</option>\n                            <option value=\"Yes, all over the world\">Yes, all over the world</option>\n                        </Form.Control>\n                    </Form.Group>              \n                                          \n                    {/* <!-- Personal Links --> */} \n                    <Form.Group controlId=\"instagram\">\n                        <Form.Label>Instagram URL</Form.Label>\n                        <Form.Control type=\"text\" name=\"instagram\" value={this.state.user.instagram} onChange={this.handleInputChange} />\n                    </Form.Group>         \n                    <Form.Group controlId=\"linkedin\">\n                        <Form.Label>Linkedin URL</Form.Label>\n                        <Form.Control type=\"text\" name=\"linkedin\" value={this.state.user.linkedin} onChange={this.handleInputChange} />\n                    </Form.Group>                            \n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"text\" name=\"email\" value={this.state.user.email} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"whatsapp\">\n                        <Form.Label>Phone Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"mobile\" value={this.state.user.mobile} onChange={this.handleInputChange} pattern=\"[0-9]{11}\" />\n                        <small><i>*Enter your country code followed by your phone Example: 34689528145</i></small>\n                    </Form.Group>\n  \n                    {/* <!-- Username --> */}\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.user.username} onChange={this.handleInputChange} minLength=\"2\" maxLength=\"15\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Password --> */}\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.user.password} onChange={this.handleInputChange} minLength=\"2\" required/>\n                    </Form.Group>\n\n                    {/* <!-- Image --> */}                \n                    <Form.Group>\n                        <Form.Label>Image (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>                      \n                        </Col>  \n                         \n                    </Row>\n                    <Row>\n                              \n                    <Col className=\"text-center mt-4\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Save'}</Button>\n                                \n                    </Col>  \n                    </Row>\n            </Form>\n        </Container> \n           \n        )\n    }\n}\n\nexport default AccountEdit\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js",["225"],"import './Loader.css'\nexport default () => <div className=\"loader\"></div>","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js",["226","227","228","229","230"],"import React, { Component } from 'react'\n\nimport Home from \"../pages/Home/Home\"\n\n// ========== BOARDS ========== \nimport MyBoards from \"../pages/Board/MyBoards\"\nimport BoardDetails from \"../pages/Board/Board-details\"\n\n// ========== LAYOUT ========== \nimport Navigation from \"../layout/Navigation/Navigation\"\n\n// ========== IMAGES ========== \nimport ImagesList from \"../pages/Images-list/Images-list\"\n\n// ========== AUTH ========== \nimport AuthServices from '../../service/auth.service'\nimport Signup from \"../pages/Auth/Signup\"\nimport Login from \"../pages/Auth/Login\"\n\n// ========== ACCOUNT ========== \nimport Account from \"../pages/Account/Account\"\nimport WorksList from \"../pages/Portfolio/Works-list/Works-list\"\nimport WorkDetails from '../pages/Portfolio/Work-details/Work-details'\nimport Follows from \"../pages/Account/Follows\"\n\n// ========== PROFESSIONALS ========== \nimport UsersList from \"../pages/Professionals/Users-list/Users-list\"\nimport UserDetails from '../pages/Professionals/User-details/User-details'\nimport FashionUsers from \"../pages/Professionals/Fashion/Fashion-users\"\nimport MakeupUsers from \"../pages/Professionals/Makeup/Makeup-users\"\nimport ModelingUsers from \"../pages/Professionals/Modeling/Modeling-users\"\nimport PhotographyUsers from \"../pages/Professionals/Photography/Photography-users\"\nimport StylismUsers from \"../pages/Professionals/Stylism/Stylism-users\"\nimport WorkDetailsUser from '../pages/Portfolio/Work-details/Work-details-otherUser'\n\n// ========== CHAT ========== \nimport Chat from \"../pages/Chat/Chat\"\n\nimport Alert from '../shared/Alert/Alert'\nimport AlertError from '../shared/Alert/Alert-error'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: undefined,\n      mount: false,\n      showToast: false,\n      toastText: '',\n      showToastError: false,\n      toastTextError: '' \n    }\n    this.authServices = new AuthServices()\n  }\n\n  componentDidMount = () => {\n\n    this.authServices   \n      .isLoggedIn()\n      .then(response => this.setTheUser(response.data))\n      .catch(err => this.setTheUser(undefined))\n  }\n\n  setTheUser = user => this.setState({ loggedInUser: user, mount: true })\n\n  removeUser = () => this.setTheUser(undefined)\n\n  handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })\n  handleToastError = (visible, text) => this.setState({ showToastError: visible, toastTextError: text})\n\n  render() {\n\n    return (\n      <>\n        <Navigation storeUser={this.setTheUser} loggedUser={this.state.loggedInUser} {...this.props} />   \n    \n        {this.state.mount ? \n          \n          <main>\n          <Switch> \n\n            <Route path=\"/\" exact render={props => <Home loggedUser={this.state.loggedInUser} loggedUser={this.state.loggedInUser} {...props} />} />                  \n                                \n            {/* <!-- Auth --> */}\n            <Route path=\"/signup\" render={props => <Signup handleToast={this.handleToast} handleToastError={this.handleToastError} storeUser={this.setTheUser} {...props} />} />\n            <Route path=\"/login\" render={props => <Login handleToast={this.handleToast} handleToastError={this.handleToastError} storeUser={this.setTheUser} {...props} />} />   \n            <Route path=\"/logout\" render={() => <Redirect to=\"/login\" />} />            \n           \n            {this.state.loggedInUser\n                ? \n                <>\n             \n                <Route path='/chat' render={() => <Chat loggedUser={this.state.loggedInUser} />} /> \n                  \n                {/* <!-- Account --> */}\n                <Route path=\"/account/:user_id\" render={props => <Account handleToast={this.handleToast} loggedUser={this.state.loggedInUser} removeUser={this.removeUser} {...props} />} /> \n                <Route exact path='/works/:user_id' exact render={props => <WorksList handleToast={this.handleToast} loggedUser={this.state.loggedInUser} {...props} /> } />\n                <Route exact path=\"/works/details/:work_id\" exact render={props => <WorkDetails handleToast={this.handleToast} loggedUser={this.state.loggedInUser} {...props} />} />   \n                <Route exact path=\"/work/:work_id\" exact render={props => <WorkDetailsUser loggedUser={this.state.loggedInUser} {...props} />} />       \n                <Route exact path='/:user_id/follows' exact render={props => <Follows loggedUser={this.state.loggedInUser} {...props} />} />                \n                <Route path='/myBoards/:user_id' render={props => <MyBoards handleToast={this.handleToast} loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path='/details/:board_id' render={props => <BoardDetails loggedUser={this.state.loggedInUser} {...props} />} />\n\n                {/* <!-- Professionals --> */}\n                <Route path=\"/professionals/:user_id\" render={props => <UserDetails loggedUser={this.state.loggedInUser} {...props} />} /> \n                <Route path='/professionals' exact render={props => <UsersList loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path=\"/fashion\" render={() => <FashionUsers />} />\n                <Route path=\"/makeup\" render={() => <MakeupUsers />} />\n                <Route path=\"/modeling\" render={() => <ModelingUsers />} /> \n                <Route path=\"/photography\" render={() => <PhotographyUsers />} /> \n                <Route path=\"/stylism\" render={() => <StylismUsers />} /> \n\n                {/* <!-- Images -->  */}\n                <Route path=\"/search/:user_id\" exact render={(props) => <ImagesList loggedUser={this.state.loggedInUser} storeUser={this.setTheUser} {...props} />} />\n                </>\n                :\n                <Redirect to=\"/login\"/>             \n            }    \n            \n          </Switch>\n            \n            <Alert show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} />\n            <AlertError show={this.state.showToastError} handleToastError={this.handleToastError} toastText={this.state.toastTextError} />\n          </main>\n          \n          : null\n          \n        }       \n      </>\n    )\n  }\n}\n\nexport default App;\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Slider.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/Scroll.js",[],["231","232"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Alert/Alert.js",["233"],"import { Toast } from 'react-bootstrap'\nimport success from \"./success.png\"\n\nconst Alert = ({ show, toastText, handleToast }) => {\n  return (\n    <Toast className=\"toast-container\" show={show} onClose={() => handleToast(false)} delay={3000} autohide style={{ position: 'fixed', bottom: \"40%\", right: \"40%\", left: \"39%\", color: \"rgba(255, 255, 255, 0.747)\" }}>\n      <Toast.Header className=\"float-right\" style={{ backgroundColor: \"transparent\", border: \"none\" }}>     \n      </Toast.Header>\n      <Toast.Body className=\"mt-4 mb-3 text-center\">\n        <img src={success} className=\"mx-auto d-block mb-2\" style={{opacity: 0.7}}/>\n        <h5>SUCCESS !</h5>\n        {/* <p style={{ fontSize: 15}}>{toastText}</p> */}\n      </Toast.Body>\n    </Toast>\n  )\n}\n\nexport default Alert","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-delete.js",["234"],"import { Modal } from 'react-bootstrap'\nimport cancel from \"./cancel.png\"\n\nconst PopupDelete = ({ show, title, handleModal, children }) => {\n    return (\n        <Modal size=\"md\" show={show} onHide={() => handleModal(false)} className=\"modal-delete-container\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <Modal.Header closeButton className=\"modal-header\" id=\"contained-modal-title-vcenter\">\n                <Modal.Title id=\"contained-modal-title-vcenter\" className=\"col-12 text-center mt-4\">\n                    {title} \n                    <hr className=\"delete-hr mt-3\"></hr>\n                </Modal.Title>            \n            </Modal.Header>\n            <Modal.Body className=\"modal-body text-center\">\n                <img src={cancel} className=\"mb-2\" style={{opacity: 0.7}}></img>\n                <h5 className=\"mb-3\">Are you sure ?</h5>\n                <p>This action cannot be undone</p>\n                {children}\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default PopupDelete","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Alert/Alert-error.js",["235"],"import { Toast } from 'react-bootstrap'\nimport error from \"./error.png\"\n\nconst AlertError = ({ show, toastText, handleToastError }) => {\n  return (\n    <Toast className=\"toast-error-container\" show={show} onClose={() => handleToastError(false)} delay={2000} autohide style={{ position: 'fixed', bottom: \"40%\", right: \"40%\", left: \"39%\", color: \"rgba(255, 255, 255, 0.747)\" }}>\n      <Toast.Header className=\"float-right\" style={{ backgroundColor: \"transparent\", border: \"none\" }}>     \n      </Toast.Header>\n      <Toast.Body className=\"mt-4 mb-3 text-center\">\n        <img src={error} className=\"mx-auto d-block mb-2\" style={{opacity: 0.7}}/>\n        <h5>OOPS !</h5>\n        <p style={{ fontSize: 15}}>{toastText}</p>\n      </Toast.Body>\n    </Toast>\n  )\n}\n\nexport default AlertError","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details-otherUser.js",["236","237"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport BoardService from '../../../../service/boards.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport { Container, Row, Col, Card } from 'react-bootstrap'\n\nimport Fade from 'react-reveal/Fade'\n\nclass WorkDetailsUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            theBoard: {},\n            coworkers: [],\n            user: this.props.loggedUser     \n        }\n        this.worksService = new WorkService()\n        this.boardsService = new BoardService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.displayWork() \n        this.displayCoworkers()\n    }\n\n    displayWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .then(() => this.displayBoard())\n            .then(() => this.displayCoworkers())\n            .catch(err => console.log(err))   \n    }\n\n    displayBoard = () => {        \n        const board_id = this.state.work.board\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({theBoard: res.data}))\n            .catch(err => console.log(err)) \n    }\n\n    displayCoworkers = () => {\n        this.userService\n            .getUsers()\n            .then(res => {                 \n                let filteredUsers = res.data.filter(elm => this.state.work.coworkers.includes(elm._id))\n                this.setState({ coworkers: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    render() {\n\n        return (\n        \n        <>\n\n        <Fade>\n        <Container className = \"portfolio-container \">\n    \n       { this.state.theBoard.images && this.state.coworkers ?\n            <Row>\n                <Col md={5} className=\"account-section1 portfolio-details text-center mt-4\">\n                    <h3 className=\"\">{this.state.work.title}</h3>\n                    <div className=\"user-img mt-5\">\n                        <Card.Img className=\"mb-4\" src={this.state.work.image} alt={this.state.user.title} />\n                            </div>\n                    <h6 className=\"mb-5\">Date: {this.state.work.date}</h6>       \n                    <h5 className=\"mt-5\">Status</h5>   \n                    <hr/>        \n                    <p> {this.state.work.status}</p>                                                                                                     \n                 </Col>\n                            \n                <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">\n                                \n                    <div className=\"description\">\n                        <h3 >Description</h3>\n                        <hr />\n                        <p className=\"mb-5\">{this.state.work.description}</p>\n                        <h5>Coworkers</h5>\n                        <hr />\n                        <div className=\"\">\n                            <div className=\"coworker coworkers-container mt-4 d-flex flex-wrap justify-content-between\">\n                                        {this.state.coworkers.map(elm => {\n                                         return (   <div className=\"coworkerimg-container text-center mr-5\">\n                                                        <img key={elm} src={elm.image} />\n                                                        <h6 className=\"mt-3\">{elm.name}</h6>\n                                                    </div>)\n                                        })}                                  \n                            </div>             \n                        </div>\n                        <h5>Board</h5>\n                        <hr/>\n                    <div className=\"d-flex flex-row justify-content-around flex-wrap userimg-container mb-4 ml-4\">\n                           \n                                    {this.state.theBoard.images.map(elm => {\n                                        return (<Col>\n                                            \n                                                    <img key={elm} src={elm} />\n                                                    \n                                                </Col>)\n                                    })}\n                         </div>\n                    </div>\n                                \n                    <div></div>\n                </Col>\n            </Row>\n            : null  }\n\n        </Container> \n                \n        </Fade>  \n            \n           </> \n        )    \n    }\n}\n\nexport default WorkDetailsUser","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Footer/Footer.js",["238","239"],"import linkedin from \"./linkedin2.png\"\n\nconst Footer = () => {\n    return (\n    <footer className=\"site-footer\">\n      <div className=\"container \">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-6\">\n            <h6>About</h6>\n            <p className=\"text-justify mr-4\">Scanfcode.com <i>CODE WANTS TO BE SIMPLE </i> is an initiative  to help the upcoming programmers with the code. Scanfcode focuses on providing the most efficient code or snippets as the code wants to be simple. We will help programmers build up concepts in different programming languages that include C, C++, Java, HTML, CSS, Bootstrap, JavaScript, PHP, Android, SQL and Algorithm.</p>\n          </div>\n\n          <div className=\"col-xs-6 col-md-3\">\n            <h6>Categories</h6>\n            <ul className=\"footer-links\">\n              <li><a href=\"http://scanfcode.com/category/c-language/\">Photography</a></li>\n              <li><a href=\"http://scanfcode.com/category/front-end-development/\">Fashion</a></li>\n              <li><a href=\"http://scanfcode.com/category/back-end-development/\">Stylism</a></li>\n              <li><a href=\"http://scanfcode.com/category/java-programming-language/\">Makeup</a></li>\n              <li><a href=\"http://scanfcode.com/category/android/\">Modeling</a></li>           \n            </ul>\n          </div>\n\n          <div className=\"col-xs-6 col-md-3\">\n            <h6>Quick Links</h6>\n            <ul className=\"footer-links\">\n              <li><a href=\"http://scanfcode.com/about/\">About Us</a></li>\n              <li><a href=\"http://scanfcode.com/contact/\">Contact Us</a></li>\n              <li><a href=\"http://scanfcode.com/contribute-at-scanfcode/\">Terms & Condition</a></li>\n              <li><a href=\"http://scanfcode.com/privacy-policy/\">Privacy Policy</a></li>\n              <li><a href=\"http://scanfcode.com/sitemap/\">Sitemap</a></li>\n            </ul>\n          </div>\n        </div>\n        <hr/>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-sm-6 col-xs-12\">\n            <p className=\"copyright-text\">Copyright &copy; 2020 All Rights Reserved by Sara Martínez Vega.</p>\n          </div>\n\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <ul className=\"social-icons\">             \n                <li><a className=\"linkedin\" target=\"_blank\" href=\"https://www.linkedin.com/in/sara-mart%C3%ADnez-vega-5a25991b9/\"><img src={linkedin} style={{width: 20, height: 20, opacity: 0.8}} className=\"linkedin-icon mb-1\"></img></a></li>   \n            </ul>\n          </div>\n        </div>\n      </div>\n</footer>\n    )\n}  \n\nexport default Footer\n\n\n",{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":54,"column":71,"nodeType":"250","messageId":"251","endLine":54,"endColumn":73},{"ruleId":"252","severity":1,"message":"253","line":93,"column":208,"nodeType":"254","endLine":93,"endColumn":224},{"ruleId":"255","severity":1,"message":"256","line":69,"column":37,"nodeType":"257","endLine":69,"endColumn":76},{"ruleId":"244","severity":1,"message":"258","line":4,"column":43,"nodeType":"246","messageId":"247","endLine":4,"endColumn":49},{"ruleId":"248","severity":1,"message":"249","line":61,"column":70,"nodeType":"250","messageId":"251","endLine":61,"endColumn":72},{"ruleId":"255","severity":1,"message":"256","line":127,"column":57,"nodeType":"257","endLine":127,"endColumn":90},{"ruleId":"255","severity":1,"message":"256","line":140,"column":53,"nodeType":"257","endLine":140,"endColumn":80},{"ruleId":"248","severity":1,"message":"249","line":38,"column":65,"nodeType":"250","messageId":"251","endLine":38,"endColumn":67},{"ruleId":"248","severity":1,"message":"249","line":49,"column":66,"nodeType":"250","messageId":"251","endLine":49,"endColumn":68},{"ruleId":"248","severity":1,"message":"249","line":98,"column":66,"nodeType":"250","messageId":"251","endLine":98,"endColumn":68},{"ruleId":"248","severity":1,"message":"249","line":114,"column":66,"nodeType":"250","messageId":"251","endLine":114,"endColumn":68},{"ruleId":"244","severity":1,"message":"259","line":6,"column":45,"nodeType":"246","messageId":"247","endLine":6,"endColumn":49},{"ruleId":"244","severity":1,"message":"260","line":6,"column":51,"nodeType":"246","messageId":"247","endLine":6,"endColumn":54},{"ruleId":"261","severity":1,"message":"262","line":2,"column":1,"nodeType":"263","endLine":2,"endColumn":52},{"ruleId":"252","severity":1,"message":"253","line":85,"column":95,"nodeType":"254","endLine":85,"endColumn":131},{"ruleId":"252","severity":1,"message":"253","line":100,"column":53,"nodeType":"254","endLine":100,"endColumn":58},{"ruleId":"252","severity":1,"message":"253","line":101,"column":61,"nodeType":"254","endLine":101,"endColumn":66},{"ruleId":"252","severity":1,"message":"253","line":102,"column":52,"nodeType":"254","endLine":102,"endColumn":57},{"ruleId":"252","severity":1,"message":"253","line":103,"column":55,"nodeType":"254","endLine":103,"endColumn":60},{"ruleId":"240","replacedBy":"264"},{"ruleId":"242","replacedBy":"265"},{"ruleId":"255","severity":1,"message":"256","line":10,"column":9,"nodeType":"257","endLine":10,"endColumn":85},{"ruleId":"255","severity":1,"message":"256","line":14,"column":17,"nodeType":"257","endLine":14,"endColumn":75},{"ruleId":"255","severity":1,"message":"256","line":10,"column":9,"nodeType":"257","endLine":10,"endColumn":83},{"ruleId":"255","severity":1,"message":"256","line":93,"column":57,"nodeType":"257","endLine":93,"endColumn":90},{"ruleId":"255","severity":1,"message":"256","line":106,"column":53,"nodeType":"257","endLine":106,"endColumn":80},{"ruleId":"266","severity":1,"message":"267","line":45,"column":45,"nodeType":"254","endLine":45,"endColumn":60},{"ruleId":"255","severity":1,"message":"256","line":45,"column":131,"nodeType":"257","endLine":45,"endColumn":228},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["268"],["269"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]