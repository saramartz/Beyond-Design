[{"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js":"1","/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js":"2","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js":"3","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js":"4","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js":"5","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js":"6","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js":"7","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js":"8","/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js":"9","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js":"10","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js":"11","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js":"12","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js":"13","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js":"14","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js":"15","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js":"16","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js":"17","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js":"18","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js":"19","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js":"20","/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js":"21","/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js":"22","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js":"23","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js":"24","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js":"25","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js":"26","/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js":"27","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js":"28","/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js":"29","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js":"30","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js":"31","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js":"32","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js":"33","/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js":"34","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js":"35","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js":"36","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js":"37","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js":"38","/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js":"39","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js":"40"},{"size":524,"mtime":1608192280000,"results":"41","hashOfConfig":"42"},{"size":598,"mtime":1608204334000,"results":"43","hashOfConfig":"42"},{"size":2317,"mtime":1608153877000,"results":"44","hashOfConfig":"42"},{"size":3993,"mtime":1608218941000,"results":"45","hashOfConfig":"42"},{"size":3579,"mtime":1608217376000,"results":"46","hashOfConfig":"42"},{"size":4404,"mtime":1608279061000,"results":"47","hashOfConfig":"42"},{"size":4106,"mtime":1608274622000,"results":"48","hashOfConfig":"42"},{"size":4613,"mtime":1608235588000,"results":"49","hashOfConfig":"42"},{"size":5730,"mtime":1608279003000,"results":"50","hashOfConfig":"42"},{"size":2290,"mtime":1608197987000,"results":"51","hashOfConfig":"42"},{"size":2714,"mtime":1608236206000,"results":"52","hashOfConfig":"42"},{"size":6245,"mtime":1608249327000,"results":"53","hashOfConfig":"42"},{"size":1428,"mtime":1608275199000,"results":"54","hashOfConfig":"42"},{"size":6199,"mtime":1608275351000,"results":"55","hashOfConfig":"42"},{"size":1297,"mtime":1608274265000,"results":"56","hashOfConfig":"42"},{"size":1293,"mtime":1608274271000,"results":"57","hashOfConfig":"42"},{"size":1306,"mtime":1608274277000,"results":"58","hashOfConfig":"42"},{"size":1302,"mtime":1608274253000,"results":"59","hashOfConfig":"42"},{"size":1293,"mtime":1608274284000,"results":"60","hashOfConfig":"42"},{"size":4257,"mtime":1608275343000,"results":"61","hashOfConfig":"42"},{"size":485,"mtime":1608204327000,"results":"62","hashOfConfig":"42"},{"size":664,"mtime":1607889313000,"results":"63","hashOfConfig":"42"},{"size":1527,"mtime":1607899915000,"results":"64","hashOfConfig":"42"},{"size":741,"mtime":1608153788000,"results":"65","hashOfConfig":"42"},{"size":2850,"mtime":1608237684000,"results":"66","hashOfConfig":"42"},{"size":1261,"mtime":1608274414000,"results":"67","hashOfConfig":"42"},{"size":377,"mtime":1607699206000,"results":"68","hashOfConfig":"42"},{"size":585,"mtime":1608274137000,"results":"69","hashOfConfig":"42"},{"size":640,"mtime":1607699220000,"results":"70","hashOfConfig":"42"},{"size":7124,"mtime":1608243979000,"results":"71","hashOfConfig":"42"},{"size":7359,"mtime":1608243949000,"results":"72","hashOfConfig":"42"},{"size":8953,"mtime":1608274878000,"results":"73","hashOfConfig":"42"},{"size":537,"mtime":1608233857000,"results":"74","hashOfConfig":"42"},{"size":310,"mtime":1607699213000,"results":"75","hashOfConfig":"42"},{"size":73,"mtime":1607256110000,"results":"76","hashOfConfig":"42"},{"size":5119,"mtime":1608213031000,"results":"77","hashOfConfig":"42"},{"size":2383,"mtime":1608233391000,"results":"78","hashOfConfig":"42"},{"size":2764,"mtime":1608233537000,"results":"79","hashOfConfig":"42"},{"size":692,"mtime":1608237539000,"results":"80","hashOfConfig":"42"},{"size":517,"mtime":1608274168000,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"kxha0u",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SaraMartz/Desktop/final-project-app/client/src/index.js",[],["173","174"],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/auth.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/MyBoards.js",["175","176"],"import React, { Component } from 'react'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport UserService from '../../../service/account.service'\nimport BoardService from \"../../../service/boards.service\"\nimport BoardForm from \"./Board-form\"\nimport BoardCard from \"./Board-card\"\nimport Popup from \"../../shared/Popup/Popup\"\n\nclass MyBoards extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {          \n            user: this.props.loggedUser,\n            boards: [],\n            showModal: false\n        }\n        this.userService = new UserService()\n        this.boardsService = new BoardService()\n    }   \n\n    componentDidMount = () => {\n        this.getUser()\n        this.displayBoards()\n    }   \n    \n    getUser = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => this.setState({boards: res.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n    \n    render() {\n        return (\n            <>\n                <Container>\n                    <Row className=\"mt-5 mb-5\"> \n                        \n                        {\n                           this.state.boards.filter(elm => elm.author == this.state.user._id).map(elm => <BoardCard key={elm._id} {...elm} />) \n                        }    \n                   </Row>\n                    \n                    <Row className=\" text-center \">\n                       <Col>\n                         <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"lg\" className=\"btn-obscure mt-5\">New Board</Button>\n                    </Col>\n                    </Row>\n                </Container>\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} title=\"New work\">\n                    <BoardForm closeModal={() => this.handleModal(false)} getBoards={this.displayBoards} loggedUser={this.props.loggedUser} />\n                </Popup> \n            </>      \n        )\n    }\n}\n\nexport default MyBoards","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-details.js",["177"],"import React, { Component } from 'react'\nimport BoardService from '../../../service/boards.service'\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { XCircle } from 'react-bootstrap-icons';\n\n// import WorkEdit from \"../Work-edit/Work-edit\"\n// import Popup from \"../../../shared/Popup/Popup\"\n\nclass BoardDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            board: {},\n            showModal: false,\n            hover: false\n        }\n        this.boardsService = new BoardService()\n    }\n\n    componentDidMount = () => this.displayBoard()\n\n    displayBoard = () => {\n        const board_id = this.props.match.params.board_id\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({ board: res.data }))\n            .catch(err => console.log(err))   \n    }\n\n    deleteBoard = () => {\n        const board_id = this.props.match.params.board_id\n\n        this.boardsService\n            .deleteBoard(board_id)\n            .then(res => {\n                this.setState({ board: res.data })\n                this.props.history.push(`/myBoards/${this.props.loggedUser._id}`)  \n            })\n            .catch(err => console.log(err))   \n    }\n\n    getImages = (image) => {  \n        let idx = this.state.board.images.indexOf(image)\n        this.state.board.images.splice(idx, 1)\n\n        let photos = this.state.board.images\n  \n        this.setState({ board: {...this.state.board, images: photos } }, () => this.deleteImage())         \n    }\n\n    deleteImage = () => {                \n        const board_id = this.props.match.params.board_id\n            \n        this.boardsService\n            .editBoard(board_id, this.state)\n            .then(() => console.log(\"good\"))            \n            .catch((err) => console.log(err))\n    }\n\n    toggleHover = (state) => this.setState({hover: state})\n\n    handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n        \n        let trash;\n            if (this.state.hover) {\n                trash = {color: '#c90a0a'}\n            } else {\n                trash = {color: '#FFFFFF'}\n            }\n\n        return (\n            <>\n                <Container className=\"images-container\">\n         \n                <Row>\n                \n                            {this.state.board.images\n                                &&\n                                this.state.board.images.map(elm => {\n                                    return (\n                                        <Col md={2} className=\"pexelimg-container mr-5 ml-5 mb-5 mt-5\">\n                                            <div className=\"pexelimg-card\" key={elm}>\n                                                <Card.Img variant=\"top\" src={elm} /> \n                                            </div>                                       \n                                    \n                                            <XCircle style={trash} onMouseEnter={this.toggleHover} onMouseLeave={() => this.toggleHover(false)} className=\"what\" size={20} onClick={() => this.getImages(elm)} className=\"mb-4\" />                                            \n\n                                        </Col>\n                                    )                                    \n                                })                         \n                            } \n                </Row> \n\n                <Row>\n                    <Col md={12} className=\"text-center\">\n                        <Button onClick={this.deleteBoard} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 btn-delete\">Delete</Button>\n                        <Link to={`/myBoards/${this.props.loggedUser._id}`}  className=\"btn-sm ml-5 btn-obscure\">Back</Link>\n                    </Col> \n                </Row>    \n               \n                </Container>             \n            </>    \n        )    \n    }\n}\n\nexport default BoardDetails\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Signup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Home/Home.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Images-list.js",["178"],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/layout/Navigation/Navigation.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Auth/Login.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Works-list.js",["179"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport UserService from '../../../../service/account.service'\nimport WorkCard from \"./Work-card\"\n\nimport { Container, Row, Button, Col } from 'react-bootstrap'\nimport WorkForm from '../Work-form/Work-form'\nimport Popup from \"../../../shared/Popup/Popup\"\n// import Loader from '../shared/Spinner/Loader'\n\nclass WorksList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            works: [],            \n            showModal: false\n        }\n        this.worksService = new WorkService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.getUser()\n        this.displayWorks()\n    }\n\n    getUser = () => {\n        const user_id = this.props.match.params.user_id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    displayWorks = () => {\n        this.worksService\n            .getWorks()\n            .then(res => this.setState({works: res.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n   \n    render() {\n        return (\n            \n            <>\n                <Container className=\"portfolio-container mb-5 mt-5\">\n                    <Row>\n                        <Col className=\"mt-5 text-center\">\n                            <h2>Portfolio</h2>\n                        </Col>                        \n                    </Row> \n                    <Row className=\" mb-5 d-flex flex-row justify-content-center\">                                      \n            \n                        {\n                           this.state.works.filter(elm => elm.author == this.state.user._id || elm.coworkers.includes(this.state.user._id)).map(elm => <WorkCard key={elm._id} {...elm} />) \n                        }                   \n                                                \n                    </Row>\n\n                    <Row >\n                        <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn btn-obscure mb-5\">Create New Work</Button>\n                    </Row>\n\n                </Container>                \n\n                 <Popup show={this.state.showModal} handleModal={this.handleModal} title=\" \">\n                    <WorkForm closeModal={() => this.handleModal(false)} updateList={this.displayWorks} loggedUser={this.props.loggedUser} />\n                </Popup>             \n            </> \n        )\n    }\n} \n\nexport default WorksList\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-details/Work-details.js",["180","181","182"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport BoardService from '../../../../service/boards.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport WorkEdit from \"../Work-edit/Work-edit\"\nimport Popup from \"../../../shared/Popup/Popup\"\n\nimport { Link } from 'react-router-dom'\n\nclass WorkDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            board: {},\n            coworkers: [],\n            user: this.props.loggedUser,\n            showModal: false\n        }\n        this.worksService = new WorkService()\n        this.boardsService = new BoardService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {\n        this.displayWork() \n        this.displayCoworkers()\n    }\n\n    displayWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => {this.setState({ work: res.data }, () => this.displayBoard())})\n            .catch(err => console.log(err))   \n    }\n\n    displayBoard = () => {        \n        const board_id = this.state.work.board\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({board: res.data}))\n            .catch(err => console.log(err)) \n    }\n\n    deleteWork = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .deleteWork(work_id)\n            .then(res => {\n                this.setState({ work: res.data })\n                this.props.history.push(`/works/${this.state.user._id}`)  \n            })\n            .catch(err => console.log(err))   \n    }\n\n\n    displayCoworkers = () => {\n        this.userService\n            .getUsers()\n            .then(res => {                 \n                let filteredUsers = res.data.filter(elm => this.state.work.coworkers.includes(elm._id))\n                this.setState({ coworkers: filteredUsers})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n\n        return (\n          \n        <Container className = \"portfolio-container \">\n    \n       { this.state.board.images && this.state.coworkers ?\n            <Row>\n                <Col md={5} className=\"account-section1 portfolio-details text-center mt-4\">\n                    <h3 className=\"\">{this.state.work.title}</h3>\n                    <div className=\"user-img mt-5\">\n                        <Card.Img className=\"mb-4\" src={this.state.work.image} alt={this.state.user.title} />\n                            </div>\n                    <h6 className=\"mb-5\">Date: {this.state.work.date}</h6>       \n                    <h5 className=\"mt-5\">Status</h5>   \n                    <hr/>        \n                    <p> {this.state.work.status}</p>\n                    \n             \n                    {/* <p>{this.state.user.area.location[0]}, {this.state.user.area.location[1]}</p> */}\n                                                                                   \n                    <Button onClick={() => this.handleModal(true)} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Edit</Button>\n                    <Button onClick={this.deleteWork} variant=\"none\" size=\"sm\" className=\"create-btn mt-5 btn-delete\">Delete</Button>\n                </Col>\n                            \n                <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">\n                                \n                    <div className=\"description\">\n                        <h3 >Description</h3>\n                        <hr />\n                        <p className=\"mb-5\">{this.state.work.description}</p>\n                        <h5>Coworkers</h5>\n                        <hr />\n                        <div className=\"d-flex flex-row \">\n                            <div className=\"coworker coworkers-container mr-3\">\n                                {this.state.coworkers.map(elm => <img key={elm} src={elm.image} />)}                                  \n                            </div>\n                            <div className=\"info mt-5\">\n                                {this.state.coworkers.map((elm) => <h5>{elm.name}</h5> )}\n                            </div>\n                        </div>\n                        <h5>Board</h5>\n                        <hr/>\n                    <div className=\"d-flex flex-row justify-content-around flex-wrap userimg-container mb-4 ml-4\">\n                           \n                                    {this.state.board.images.map(elm => {\n                                        return (<Col>\n                                            \n                                                    <img key={elm} src={elm} />\n                                                    \n                                                </Col>)\n                                    })}\n                         </div>\n                    </div>\n                                \n                    <div></div>\n                </Col>\n            </Row>\n            : null  }\n\n                {/* <Col lg={3} className=\"pexelimg-container\">\n                                        <div className=\"pexelimg-card\" key={elm.id}>\n                                            <Card.Img variant=\"top\" src={elm.src.medium} />\n                                        </div>\n                                    </Col> */}\n      \n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} >\n                    <WorkEdit closeModal={() => this.handleModal(false)} updateWork={this.displayWork} loggedUser={this.props.loggedUser} {...this.props}/>\n                </Popup>\n        \n        </Container> \n            \n        )    \n    }\n}\n\nexport default WorkDetails\n\n\n\n// {this.state.coworkers.map(elm => <img key={elm} src={elm.image} style={{marginBottom: \"30px\"}}/>)}\n\n// {this.state.board.images.map(elm => <img key={elm} src={elm} style={{ marginBottom: \"30px\" }} />)}","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/Users-list.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/User-details/User-details.js",["183","184"],"import React, { Component } from 'react'\nimport ProfessionalsService from '../../../../service/professionals.service'\nimport WorkService from '../../../../service/works.service'\nimport UserService from '../../../../service/account.service'\nimport WorkCard2 from \"../../Portfolio/Works-list/Work-card2\"\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap'\nimport Reveal from 'react-reveal/Reveal';\n\nclass UserDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            otherUser: {},\n            user: {},\n            works: [],      \n            weAreFriends: false\n        }\n        this.professionalsService = new ProfessionalsService()\n        this.worksService = new WorkService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => {        \n        this.displayUser()        \n        this.getLoggedUser()\n        this.checkUserFriends() //TO-DO make button dissapear\n        this.displayWorks()\n\n    }\n\n    displayUser = () => {\n        const user_id = this.props.match.params.user_id       \n\n        this.professionalsService\n            .getUser(user_id)\n            .then(res => this.setState({ otherUser: res.data }))\n            .catch(err => console.log(err))   \n    }  \n    \n    displayWorks = () => {\n        this.worksService\n            .getWorks()\n            .then(res => {\n                console.log(\"These are the works\", res.data)\n                const works = res.data.filter(elm => elm.author == this.state.otherUser._id || elm.coworkers.includes(this.state.otherUser._id) )            \n               \n                this.setState({ works: works })\n            })\n            .catch(err => console.log(err))\n    }\n\n    // ========== FOLLOWS ========== \n\n    // TO-DO create weAreFriends in user schema\n    checkUserFriends() {\n        if (this.props.loggedUser.follows.includes(this.state.otherUser._id)) {\n          this.setState({ weAreFriends: true })\n        } else {\n          this.setState({ weAreFriends: false })\n        }\n    }    \n\n    getLoggedUser() {\n        this.userService\n            .getUser(this.props.loggedUser._id)\n            .then((res) => this.setState({ user: res.data }))\n            .catch((err) => console.log(err))\n    }\n\n    addFriend = (friend_id) => {  \n        let id = this.state.user.follows.concat(friend_id)\n\n        if (this.state.user.follows.includes(friend_id)) {\n            this.checkUserFriends() // make button disabled\n        } else {\n            this.setState({ weAreFriends: true, user: { ...this.state.user, follows: id } }, () => this.updateUserInfo() )       \n        }     \n    } \n\n    updateUserInfo = () => {         \n        const user_id = this.state.user._id\n            \n        this.userService\n            .editUser(user_id, this.state)\n            .then(() => console.log(\"good!!\"))            \n            .catch((err) => console.log(err))\n    }     \n\n    render() {\n\n        return (\n            <>\n                <Container className=\"account-details mb-5\">\n                    <Row>        \n                        <Col md={5} className=\"account-section1 text-center\">               \n                            <div className=\"account-img\">                                \n                                <Card.Img className=\"mb-4\" src={this.state.otherUser.image} alt={this.state.otherUser.name} />                       \n                            </div> \n                            <h2 className=\"mb-2\">{this.state.otherUser.name}</h2>\n                            <p>{this.state.otherUser.specialty}</p>\n                            <p>{this.state.otherUser.introduction}</p>     \n                                                    \n                            <hr />                                   \n                   \n                            <Button onClick={() => this.addFriend(this.state.otherUser._id)} disabled={this.state.weAreFriends} variant=\"none\" size=\"sm\" className=\"create-btn mr-4 mt-5 btn-transparent\">Follow</Button>\n                                     \n                        </Col>\n                            \n                        <Col md={6} className=\"account-section2 d-flex flex-column justify-content-between\">                                \n                            <div className=\"mt-5\">\n                                <h3>About</h3>\n                                <hr/>\n                                <p className=\"mb-5\">{this.state.otherUser.bio}</p> \n                                <h5>Related Info</h5>\n                                <hr />\n\n                                <div className=\"d-flex flex-row justify-content-between\">\n                                    <div>\n                                        <p>Currently</p> \n                                        <p>Ability to travel</p>\n                                    </div>\n                                    <div className=\"info\">\n                                        <p>{this.state.otherUser.target}</p>\n                                        <p>{this.state.otherUser.availability}</p>\n                                    </div>\n                                </div>                               \n                            </div>\n                                \n                            <div></div>   \n                        </Col>                        \n                    </Row>             \n                </Container>\n\n                <Container className=\"portfolio-container mb-5\" >     \n                    <Row>\n                        <Col className=\"mt-5 text-center\">\n                            <h2>Portfolio</h2>\n                        </Col>                        \n                    </Row>    \n                    <Row className=\" mb-5 d-flex flex-row justify-content-center\">\n                                        \n                            {\n                            this.state.works ? this.state.works.map(elm => <WorkCard2 key={elm._id} {...elm} />) : null\n                            } \n                     \n                    </Row>  \n               </Container> \n            </>    \n        )    \n    }\n}\n\nexport default UserDetails\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Makeup/Makeup-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Modeling/Modeling-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Photography/Photography-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Fashion/Fashion-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Stylism/Stylism-users.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Follows.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/account.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/boards.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-form.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Board/Board-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Images-list/Image-form.js",["185"],"import React, { Component } from 'react'\nimport UserService from \"../../../service/account.service\"\nimport BoardService from '../../../service/boards.service'\n\nimport { Form, Button } from 'react-bootstrap'\n\nclass ImageForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            board: {               \n                _id: \"\",\n                image: \"\"\n            },\n            user: this.props.loggedUser,\n            boards: [],    \n        }\n        this.boardsService = new BoardService()    \n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => { \n        this.displayBoards()\n        // this.displayBoard() >>>>>>>>> Conseguir id cuando se muestra formulario\n    }\n    \n    handleInputChange = e => this.setState({ board: { ...this.state.board, [e.target.name]: e.target.value, image: this.props.favImages } }) \n      \n    handleSubmit = e => {  \n        e.preventDefault()\n        this.editBoard()\n    } \n\n    editBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .editBoard(board_id, this.state.board)\n            .then(() => {              \n               this.props.closeModal()              \n                console.log(\"yay!!!\")\n            })\n            .catch(err => console.log(err))\n    }\n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                this.setState({ boards: boards })\n            })\n            .catch(err => console.log(err))\n    }    \n    \n    displayBoard = () => {\n        const board_id = this.state.board._id\n\n        this.boardsService\n            .getBoard(board_id)\n            .then(res => this.setState({ board: res.data }))\n            .catch(err => console.log(err))   \n    } \n \n    render() {\n\n        return (\n            <>       \n                <Form onSubmit={this.handleSubmit} className=\"account-edit\">                  \n                    <Form.Group controlId=\"images\">                                          \n                        <Form.Control as=\"select\" name=\"_id\" type=\"select\" value={this.state._id} onChange={this.handleInputChange} >\n                            <option value=\"Choose\" disabled>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button type=\"submit\" size=\"md\" variant=\"none\" className=\"btn-transparent  mt-4\">Save to board</Button>\n                    </div>\n                </Form>\n            </>\n        )\n    }\n}\n\nexport default ImageForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Professionals/Users-list/User-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/professionals.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/works.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-edit/Work-edit.js",["186"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport Loader from \"../../../shared/Spinner/Loader\"\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkEdit extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {},\n            user: this.props.loggedUser,\n            collaborators: [],\n            boards: []\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService()\n    }\n\n    componentDidMount = () => {\n        this.workInfo()\n        this.displayFriends()\n        this.displayBoards()\n    }\n\n    workInfo = () => {\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .getWork(work_id)\n            .then(res => this.setState({ work: res.data }))\n            .catch(err => console.log(err))  \n    }\n\n    handleInputChange = e => { this.setState({ work: {...this.state.work, [e.target.name]: e.target.value}})}\n\n    handleSubmit = e => {\n  \n        e.preventDefault()\n\n        const work_id = this.props.match.params.work_id\n\n        this.worksService\n            .editWork(work_id, this.state)\n            .then(() => {\n                this.props.updateWork()\n                this.props.closeModal()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n        console.log('The image:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })\n                console.log(this.state.work.image)\n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {\n                let workCopy = {...this.state.work}\n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))\n\n                const firstFriend = [filteredUsers[0]]              \n                workCopy.coworkers = firstFriend\n          \n                this.setState({ collaborators: filteredUsers, work: workCopy})\n            })           \n            .catch(err => console.log(err))\n    } \n\n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                let workCopy = {...this.state.work}\n\n                const firstBoard = boards[0]\n              \n                workCopy.board = firstBoard\n          \n                this.setState({ boards: boards, work: workCopy })\n            })\n            .catch(err => console.log(err))\n    }  \n\n    render() {\n\n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit} >\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.work.title} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\" name=\"description\" value={this.state.work.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.work.date} onChange={this.handleInputChange} />\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.work.status} onChange={this.handleInputChange} > \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    {/* <!-- Coworkers --> */}\n                    <Form.Group controlId=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control as=\"select\" name=\"coworkers\" type=\"select\" value={this.state.work.coworkers} onChange={this.handleInputChange} > \n                            <option value=\"Choose\" disabled>Choose</option>  \n                            {this.state.collaborators.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}\n                        </Form.Control>\n                    </Form.Group>                    \n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.work.board} onChange={this.handleInputChange} >\n                            <option value=\"Choose\" disabled>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Image (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Save'}</Button>\n                    </div>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkEdit\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Work-form/Work-form.js",["187"],"import React, { Component } from 'react'\nimport WorkService from '../../../../service/works.service'\nimport FilesService from '../../../../service/upload.service'\nimport UserService from \"../../../../service/professionals.service\"\nimport BoardService from '../../../../service/boards.service'\n\nimport Loader from \"../../../shared/Spinner/Loader\"\n\nimport { Form, Button, Container } from 'react-bootstrap'\n\nclass WorkForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            work: {\n                title: '',\n                description: '',\n                date: '',\n                status: '',\n                image: '',\n                coworkers: [],\n                board: \"\",\n                author: this.props.loggedUser ? this.props.loggedUser._id : '' \n            },\n            user: this.props.loggedUser,\n            friends: [],\n            boards: [],\n            uploadingActive: false\n        }\n        this.worksService = new WorkService()\n        this.filesService = new FilesService()\n        this.userService = new UserService()\n        this.boardsService = new BoardService() \n    }\n\n    componentDidMount = () => { \n        this.getUser()\n        this.displayFriends()        \n        this.displayBoards()\n    }\n\n    getUser = () => {\n        const user_id = this.props.loggedUser._id\n\n        this.userService\n            .getUser(user_id)\n            .then(res => this.setState({ user: res.data }))\n            .catch(err => console.log(err))  \n     }\n    \n    handleInputChange = e => this.setState({ work: { ...this.state.work, [e.target.name]: e.target.value } })\n\n    handleSubmit = e => {\n        e.preventDefault()\n\n        this.worksService\n            .saveWork(this.state)\n            .then(res => {\n                this.props.updateList()\n                this.props.closeModal()\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleImageUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n        console.log('The image:', e.target.files[0])\n\n        this.setState({ uploadingActive: true })\n\n        this.filesService\n            .uploadImage(uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    work: { ...this.state.work, image: response.data.secure_url },\n                    uploadingActive: false                    \n                })\n                console.log(this.state.work.image)\n            })\n            .catch(err => console.log('ERRORRR!', err))\n    }  \n\n    displayFriends = () => {\n        this.userService\n            .getUsers()\n            .then(res => {   \n                \n                let workCopy = {...this.state.work}\n\n                let filteredUsers = res.data.filter(elm => this.state.user.follows.includes(elm._id))\n\n                const firstFriend = [filteredUsers[0]]\n              \n                workCopy.coworkers = firstFriend\n          \n                this.setState({ friends: filteredUsers, work: workCopy})\n            })           \n            .catch(err => console.log(err))\n    } \n    \n    displayBoards = () => {\n        this.boardsService\n            .getBoards()\n            .then(res => {\n                const boards = res.data.filter(elm => elm.author == this.state.user._id)\n                let workCopy = {...this.state.work}\n\n                const firstBoard = boards[0]\n              \n                workCopy.board = firstBoard\n          \n                this.setState({ boards: boards, work: workCopy })\n            })\n            .catch(err => console.log(err))\n    }    \n\n    render() {\n    \n        return (\n            <Container className=\"account-edit\">       \n                <Form onSubmit={this.handleSubmit}>\n                    \n                    {/* <!-- Title --> */}\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Description --> */}\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} type=\"textarea\"  name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <!-- Date --> */}\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha de creación</Form.Label>\n                        <Form.Control type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group> \n\n                    {/* <!-- Status --> */}        \n                    <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as=\"select\" name=\"status\" type=\"select\" value={this.state.status} onChange={this.handleInputChange} > \n                            <option value=\"Choose\" disabled>Choose</option>    \n                            <option value=\"In Progress\">In progress</option>\n                            <option value=\"Completed\">Completed</option>                     \n                        </Form.Control>\n                    </Form.Group>\n\n                    {/* <!-- Coworkers --> */}\n                    <Form.Group controlId=\"coworkers\">\n                        <Form.Label>Coworkers</Form.Label>\n                        <Form.Control as=\"select\" name=\"coworkers\" type=\"select\" value={this.state.coworkers} onChange={this.handleInputChange} > \n                            <option value=\"Choose\" disabled>Choose</option>  \n                            {this.state.friends.map(elm => <option key={elm._id} value={elm._id}>{elm.name}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n\n                    {/* <!-- Board --> */}\n                    <Form.Group controlId=\"board\">\n                        <Form.Label>Choose your board</Form.Label>\n                        <Form.Control as=\"select\" name=\"board\" type=\"select\" value={this.state.board} onChange={this.handleInputChange} >\n                            <option value=\"Choose\" disabled>Choose</option>    \n                            {this.state.boards.map(elm => <option key={elm._id} value={elm._id}>{elm.title}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n             \n                    {/* <!-- Image --> */}\n                    <Form.Group>\n                        <Form.Label>Imagen (file) {this.state.uploadingActive && <Loader />}</Form.Label>\n                        <Form.File id=\"custom-file-translate-scss\" label=\"Image\" lang=\"en\" custom onChange={this.handleImageUpload}/>\n                    </Form.Group>\n\n                    <div className=\"text-center\">\n                        <Button variant=\"none\" className=\"btn-transparent\" type=\"submit\" disabled={this.state.uploadingActive}>{this.state.uploadingActive ? 'Loading image' : 'Create'}</Button>\n                    </div>\n\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WorkForm\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Account/Account-edit.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/service/upload.service.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Spinner/Loader.js",["188"],"import './Loader.css'\nexport default () => <div className=\"loader\"></div>","/Users/SaraMartz/Desktop/final-project-app/client/src/components/App/App.js",["189","190","191","192"],"import React, { Component } from 'react'\n\nimport Home from \"../pages/Home/Home\"\n\n// ========== BOARDS ========== \nimport MyBoards from \"../pages/Board/MyBoards\"\nimport BoardDetails from \"../pages/Board/Board-details\"\n\n// ========== LAYOUT ========== \nimport Navigation from \"../layout/Navigation/Navigation\"\n\n// ========== IMAGES ========== \nimport ImagesList from \"../pages/Images-list/Images-list\"\n\n// ========== AUTH ========== \nimport AuthServices from '../../service/auth.service'\nimport Signup from \"../pages/Auth/Signup\"\nimport Login from \"../pages/Auth/Login\"\n\n// ========== ACCOUNT ========== \nimport Account from \"../pages/Account/Account\"\nimport WorksList from \"../pages/Portfolio/Works-list/Works-list\"\nimport WorkDetails from '../pages/Portfolio/Work-details/Work-details'\nimport Follows from \"../pages/Account/Follows\"\n\n// ========== PROFESSIONALS ========== \nimport UsersList from \"../pages/Professionals/Users-list/Users-list\"\nimport UserDetails from '../pages/Professionals/User-details/User-details'\nimport FashionUsers from \"../pages/Professionals/Fashion/Fashion-users\"\nimport MakeupUsers from \"../pages/Professionals/Makeup/Makeup-users\"\nimport ModelingUsers from \"../pages/Professionals/Modeling/Modeling-users\"\nimport PhotographyUsers from \"../pages/Professionals/Photography/Photography-users\"\nimport StylismUsers from \"../pages/Professionals/Stylism/Stylism-users\"\n\n// ========== PROFESSIONALS ========== \nimport Chat from \"../pages/Chat/Chat\"\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: undefined,\n      mount: false\n    }\n    this.authServices = new AuthServices()\n  }\n\n  // Check if an user is already logged\n  componentDidMount = () => {\n\n    this.authServices   \n      .isLoggedIn()\n      .then(response => this.setTheUser(response.data))\n      .catch(err => this.setTheUser(undefined))\n  }\n\n  setTheUser = user => this.setState({ loggedInUser: user, mount: true }, () => console.log(\"The current user is: \", this.state))\n\n  render() {\n\n    return (\n      <>\n        <Navigation storeUser={this.setTheUser} loggedUser={this.state.loggedInUser} {...this.props} />   \n    \n        {this.state.mount ? \n          \n          <main>\n          <Switch> \n\n            <Route path=\"/\" exact render={props => <Home loggedUser={this.state.loggedInUser} loggedUser={this.state.loggedInUser} {...props} />} />                  \n                                \n            {/* <!-- Auth --> */}\n            <Route path=\"/signup\" render={props => <Signup storeUser={this.setTheUser} {...props} />} />\n            <Route path=\"/login\" render={props => <Login storeUser={this.setTheUser} {...props} />} />   \n            <Route path=\"/logout\" render={() => <Redirect to=\"/login\" />} />            \n           \n            {this.state.loggedInUser\n                ? \n                <>\n             \n                <Route path='/chat' render={() => <Chat loggedUser={this.state.loggedInUser} />} /> \n                  \n                {/* <!-- Account --> */}\n                <Route path=\"/account/:user_id\" render={props => <Account loggedUser={this.state.loggedInUser} {...props} />} /> \n                <Route exact path='/works/:user_id' exact render={props => <WorksList loggedUser={this.state.loggedInUser} {...props} /> } />\n                <Route exact path=\"/works/details/:work_id\" exact render={props => <WorkDetails loggedUser={this.state.loggedInUser} {...props} />} />          \n                <Route exact path='/:user_id/follows' exact render={props => <Follows loggedUser={this.state.loggedInUser} {...props} />} />                \n                <Route path='/myBoards/:user_id' render={props => <MyBoards loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path='/details/:board_id' render={props => <BoardDetails loggedUser={this.state.loggedInUser} {...props} />} />\n\n                {/* <!-- Professionals --> */}\n                <Route path=\"/professionals/:user_id\" render={props => <UserDetails loggedUser={this.state.loggedInUser} {...props} />} /> \n                <Route path='/professionals' exact render={props => <UsersList loggedUser={this.state.loggedInUser} {...props} />} />\n                <Route path=\"/fashion\" render={() => <FashionUsers />} />\n                <Route path=\"/makeup\" render={() => <MakeupUsers />} />\n                <Route path=\"/modeling\" render={() => <ModelingUsers />} /> \n                <Route path=\"/photography\" render={() => <PhotographyUsers />} /> \n                <Route path=\"/stylism\" render={() => <StylismUsers />} /> \n\n                {/* <!-- Images -->  */}\n                <Route path=\"/search/:user_id\" exact render={(props) => <ImagesList loggedUser={this.state.loggedInUser} storeUser={this.setTheUser} {...props} />} />\n                </>\n                :\n                <Redirect to=\"/login\"/>             \n            }    \n            \n          </Switch>\n          </main>\n          \n          : null\n          \n        }       \n      </>\n    )\n  }\n}\n\nexport default App;\n","/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/BottomBar.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Chat/Chat.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/shared/Popup/Popup-board.js",[],"/Users/SaraMartz/Desktop/final-project-app/client/src/components/pages/Portfolio/Works-list/Work-card2.js",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":2,"column":31,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":52,"column":71,"nodeType":"204","messageId":"205","endLine":52,"endColumn":73},{"ruleId":"206","severity":1,"message":"207","line":91,"column":208,"nodeType":"208","endLine":91,"endColumn":224},{"ruleId":"198","severity":1,"message":"209","line":4,"column":43,"nodeType":"200","messageId":"201","endLine":4,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":60,"column":70,"nodeType":"204","messageId":"205","endLine":60,"endColumn":72},{"ruleId":"198","severity":1,"message":"210","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":110,"column":66,"nodeType":"213","endLine":110,"endColumn":99},{"ruleId":"211","severity":1,"message":"212","line":123,"column":53,"nodeType":"213","endLine":123,"endColumn":80},{"ruleId":"198","severity":1,"message":"214","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":46,"column":65,"nodeType":"204","messageId":"205","endLine":46,"endColumn":67},{"ruleId":"202","severity":1,"message":"203","line":51,"column":66,"nodeType":"204","messageId":"205","endLine":51,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":97,"column":66,"nodeType":"204","messageId":"205","endLine":97,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":109,"column":66,"nodeType":"204","messageId":"205","endLine":109,"endColumn":68},{"ruleId":"215","severity":1,"message":"216","line":2,"column":1,"nodeType":"217","endLine":2,"endColumn":52},{"ruleId":"206","severity":1,"message":"207","line":73,"column":95,"nodeType":"208","endLine":73,"endColumn":131},{"ruleId":"206","severity":1,"message":"207","line":88,"column":53,"nodeType":"208","endLine":88,"endColumn":58},{"ruleId":"206","severity":1,"message":"207","line":89,"column":61,"nodeType":"208","endLine":89,"endColumn":66},{"ruleId":"206","severity":1,"message":"207","line":90,"column":55,"nodeType":"208","endLine":90,"endColumn":60},{"ruleId":"198","severity":1,"message":"210","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Reveal' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]